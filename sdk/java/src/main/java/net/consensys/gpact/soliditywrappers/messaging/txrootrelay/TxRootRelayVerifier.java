package net.consensys.gpact.soliditywrappers.messaging.txrootrelay;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.7-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class TxRootRelayVerifier extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060405161117e38038061117e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6110eb806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c1ce90214610030575b600080fd5b61004361003e366004610df7565b610045565b005b600061008683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102a792505050565b600054815160208301516040808501516060860151608087015160a0880151935163917ede9960e01b81529798506001600160a01b039096169663917ede99966100d69695949091600401610ed6565b602060405180830381865afa1580156100f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101179190610f9b565b508051871461017e5760405162461bcd60e51b815260206004820152602860248201527f4576656e74206e6f7420656d697474656420627920657870656374656420626c60448201526737b1b5b1b430b4b760c11b60648201526084015b60405180910390fd5b60006101956101908360600151610577565b6105c6565b905060006101bc826001815181106101af576101af610fc4565b60200260200101516106a7565b905060606101cf84602001518a84610724565b602080870151604051929450600093506101ef928e928e91879101610fda565b60408051601f198184030181526020601f8c018190048102840181019092528a835292506102399183918c908c908190840183828082843760009201919091525061088f92505050565b61029a5760405162461bcd60e51b815260206004820152602c60248201527f4578706563746564206576656e7420646f6573206e6f74206d6174636820657660448201526b32b73a1034b710383937b7b360a11b6064820152608401610175565b5050505050505050505050565b6040805160c08101825260008082526020820181905291810182905260608082018190526080820181905260a0820152906102e461019084610577565b90506000610308610301836000815181106101af576101af610fc4565b60006108bc565b9050600061032c610325846001815181106101af576101af610fc4565b6014015190565b90506000610350610349856002815181106101af576101af610fc4565b6000610922565b9050600061036a856003815181106101af576101af610fc4565b905060006103918660048151811061038457610384610fc4565b60200260200101516105c6565b905060006103ab8760058151811061038457610384610fc4565b905080518251146104195760405162461bcd60e51b815260206004820152603260248201527f4c656e677468206f662070726f6f664f66667365747320646f6573206e6f742060448201527136b0ba31b4103632b733ba3410383937b7b360711b6064820152608401610175565b6000825167ffffffffffffffff81111561043557610435611020565b60405190808252806020026020018201604052801561045e578160200160208202803683370190505b5090506000825167ffffffffffffffff81111561047d5761047d611020565b6040519080825280602002602001820160405280156104b057816020015b606081526020019060019003908161049b5790505b50905060005b835181101561053a576104d76103018683815181106101af576101af610fc4565b8382815181106104e9576104e9610fc4565b60200260200101818152505061050a8482815181106101af576101af610fc4565b82828151811061051c5761051c610fc4565b602002602001018190525080806105329061104c565b9150506104b6565b506040805160c0810182529889526001600160a01b0390971660208901529587019490945250506060840152608083015260a08201529392505050565b60408051808201909152600080825260208201528151806105ad5750506040805180820190915260008082526020820152919050565b6040805180820190915260209384018152928301525090565b60606105d182610987565b6105da57600080fd5b60006105e5836109ae565b90508067ffffffffffffffff81111561060057610600611020565b60405190808252806020026020018201604052801561064557816020015b604080518082019091526000808252602082015281526020019060019003908161061e5790505b509150600061065384610a40565b905060005b61066182610a9b565b1561069f5761066f82610abf565b84828151811061068157610681610fc4565b602002602001018190525080806106979061104c565b915050610658565b505050919050565b60606106b282610b19565b6106bb57600080fd5b6000806106c784610b3f565b90925090508067ffffffffffffffff8111156106e5576106e5611020565b6040519080825280601f01601f19166020018201604052801561070f576020820181803683370190505b50925061071d828483610be3565b5050919050565b606080600061073561019085610577565b9050600061074f8260038151811061038457610384610fc4565b905060005b815181101561083057600061077483838151811061038457610384610fc4565b90506000610791610325836000815181106101af576101af610fc4565b90506107a98260018151811061038457610384610fc4565b96506107c1826002815181106101af576101af610fc4565b955060006107e8886000815181106107db576107db610fc4565b6020026020010151610c21565b9050898114801561080a57508a6001600160a01b0316826001600160a01b0316145b1561081a57505050505050610887565b50505080806108289061104c565b915050610754565b5060405162461bcd60e51b815260206004820152602560248201527f4e6f206576656e7420666f756e6420696e207472616e73616374696f6e20726560448201526418d95a5c1d60da1b6064820152608401610175565b935093915050565b600081518351146108a2575060006108b6565b818051906020012083805190602001201490505b92915050565b60006108c9826020611067565b835110156109195760405162461bcd60e51b815260206004820152601e60248201527f736c6963696e67206f7574206f662072616e6765202875696e743235362900006044820152606401610175565b50016020015190565b60008060005b602081101561097f5761093c81600861107f565b856109478387611067565b8151811061095757610957610fc4565b01602001516001600160f81b031916901c9190911790806109778161104c565b915050610928565b509392505050565b600081602001516000141561099e57506000919050565b50515160c060009190911a101590565b60006109b982610987565b6109c557506000919050565b81518051600090811a91906109d985610c2c565b6109e39083611067565b9050600060018660200151846109f99190611067565b610a03919061109e565b905060005b818311610a3657610a1883610cba565b610a229084611067565b925080610a2e8161104c565b915050610a08565b9695505050505050565b6040805160808101825260009181018281526060820183905281526020810191909152610a6c82610987565b610a7557600080fd5b6000610a8083610c2c565b8351610a8c9190611067565b92825250602081019190915290565b80516020810151815160009291610ab191611067565b836020015110915050919050565b6040805180820190915260008082526020820152610adc82610a9b565b1561002b5760208201516000610af182610cba565b828452602084018190529050610b078183611067565b602085015250610b149050565b919050565b6000816020015160001415610b3057506000919050565b50515160c060009190911a1090565b600080610b4b83610b19565b610b5457600080fd5b8251805160001a906080821015610b7057946001945092505050565b60b8821015610b9e5760018560200151610b8a919061109e565b9250610b97816001611067565b9350610bdc565b602085015160b6198301908190610bb79060019061109e565b610bc1919061109e565b9350610bcd8183611067565b610bd8906001611067565b9450505b5050915091565b6020601f820104836020840160005b83811015610c0e57602081028381015190830152600101610bf2565b5050505060008251602001830152505050565b60006108b682610d58565b6000816020015160001415610c4357506000919050565b8151805160001a906080821015610c5e575060009392505050565b60b8821080610c79575060c08210158015610c79575060f882105b15610c88575060019392505050565b60c0821015610caf57610c9c60b78361109e565b610ca7906001611067565b949350505050565b610c9c60f78361109e565b8051600090811a6080811015610cd35760019150610d52565b60b8811015610cf957610ce760808261109e565b610cf2906001611067565b9150610d52565b60c0811015610d2257600183015160b76020839003016101000a9004810160b519019150610d52565b60f8811015610d3657610ce760c08261109e565b600183015160f76020839003016101000a9004810160f5190191505b50919050565b6000610d6382610b19565b610d6c57600080fd5b600080610d7884610b3f565b90925090506020811115610d8b57600080fd5b80610d9a575060009392505050565b806020036101000a82510492505050919050565b60008083601f840112610dc057600080fd5b50813567ffffffffffffffff811115610dd857600080fd5b602083019150836020828501011115610df057600080fd5b9250929050565b60008060008060008060808789031215610e1057600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115610e3657600080fd5b610e428a838b01610dae565b90965094506060890135915080821115610e5b57600080fd5b50610e6889828a01610dae565b979a9699509497509295939492505050565b60005b83811015610e95578181015183820152602001610e7d565b83811115610ea4576000848401525b50505050565b60008151808452610ec2816020860160208601610e7a565b601f01601f19169290920160200192915050565b8681526000602060018060a01b0388168184015286604084015260c06060840152610f0460c0840187610eaa565b838103608085015285518082528287019183019060005b81811015610f3757835183529284019291840191600101610f1b565b505084810360a086015285518082528382019250600581901b8201840184880160005b83811015610f8857601f19858403018652610f76838351610eaa565b95870195925090860190600101610f5a565b50909d9c50505050505050505050505050565b600060208284031215610fad57600080fd5b81518015158114610fbd57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b8481526bffffffffffffffffffffffff198460601b16602082015282603482015260008251611010816054850160208701610e7a565b9190910160540195945050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561106057611060611036565b5060010190565b6000821982111561107a5761107a611036565b500190565b600081600019048311821515161561109957611099611036565b500290565b6000828210156110b0576110b0611036565b50039056fea26469706673582212204d499697f602e787171d01fb60c54b7d0efd1e8c15fa80fcd7c49a18d70c53f164736f6c634300080a0033";

    public static final String FUNC_DECODEANDVERIFYEVENT = "decodeAndVerifyEvent";

    @Deprecated
    protected TxRootRelayVerifier(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TxRootRelayVerifier(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TxRootRelayVerifier(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TxRootRelayVerifier(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    @Deprecated
    public static TxRootRelayVerifier load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TxRootRelayVerifier(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TxRootRelayVerifier load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TxRootRelayVerifier(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TxRootRelayVerifier load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TxRootRelayVerifier(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TxRootRelayVerifier load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TxRootRelayVerifier(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TxRootRelayVerifier> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(TxRootRelayVerifier.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<TxRootRelayVerifier> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(TxRootRelayVerifier.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TxRootRelayVerifier> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(TxRootRelayVerifier.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TxRootRelayVerifier> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(TxRootRelayVerifier.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
