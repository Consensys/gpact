version: 2.1
commands:
 prepare:
   steps:
      - checkout
      - run:
          name: Check out Web3j
          command: |
            git clone https://github.com/drinkcoffee/web3j-abi.git ../web3j-abi
            git --git-dir=../web3j-abi/.git rev-parse HEAD > ../web3j-abi/headcommit
      - restore_cache:
          name: Restore cached Web3j gradle dependencies
          keys:
            - deps-web3j-{{ checksum "../web3j-abi/build.gradle" }}
            - deps-web3j
      - restore_cache:
          name: Restore cached GPACT gradle dependencies
          keys:
            - deps-gpact-{{ checksum "build.gradle" }}
            - deps-gpact
      - restore_cache:
          name: Restore gradle build cache
          keys: # by decreasing rate of change...
            - build-cache-{{ checksum "../web3j-abi/headcommit" }}-{{ .Revision }}
            - build-cache-{{ checksum "../web3j-abi/headcommit" }}
            - build-cache
      - run:
         name: Install Solidity
         command: |
           sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1C52189C923F6CA9
           sudo apt-get update
           sudo apt-get -y install software-properties-common
           sudo apt-get update
           sudo add-apt-repository -y ppa:ethereum/ethereum
           sudo apt-get update
           sudo apt-get -y install solc


 capture_test_results:
   steps:
      - run:
          name: Gather test results
          when: always
          command: |
            FILES=`find . -name test-results`
            for FILE in $FILES
            do
              MODULE=`echo "$FILE" | sed -e 's@./\(.*\)/build/test-results@\1@'`
              TARGET="build/test-results/$MODULE"
              mkdir -p "$TARGET"
              cp -rf ${FILE}/*/* "$TARGET"
            done
            # show what is being gathered
            ls -R build/test-results
      - store_test_results:
          path: build/test-results


jobs:
  javasdk-build:
    machine:
      image: ubuntu-2004:202107-02
    resource_class: medium
    steps:
      # The home directory is: /home/circleci/project
      # gpact is cloned to: /home/circleci/project/.
      # web3j is cloned to: /home/circleci/web3j-abi
      - prepare
      - run:
          name: Build web3j
          command: |
            # Build our Web3j
            cd ../web3j-abi
            ./gradlew --parallel --stacktrace --info --build-cache installDist
      - run:
          name: Check code formatting, compile the code, everything but execute any tests
          command: ./gradlew build -x test -x intTest -x perfTest
      - save_cache:
          name: Caching Web3j gradle dependencies
          key: deps-web3j-{{ checksum "../web3j-abi/build.gradle" }}
          paths:
            - ../web3j/.gradle
      - save_cache:
          name: Caching GPACT gradle dependencies
          key: deps-gpact-{{ checksum "build.gradle" }}
          paths:
            - .gradle
      - save_cache:
          name: Caching gradle build cache
          key: build-cache-{{ checksum "../web3j-abi/headcommit" }}-{{ .Revision }}
          paths:
            - ~/.gradle

  javaUnitTestsMachine:
    machine:
      image: ubuntu-2004:202107-02
    resource_class: large
    steps:
      # The home directory is: /home/circleci/project
      # gpact is cloned to: /home/circleci/project/.
      # web3j is cloned to: /home/circleci/web3j-abi
      - prepare
      - run:
          name: Build web3j
          command: |
            # Build our Web3j
            cd ../web3j-abi
            ./gradlew --parallel --stacktrace --info --build-cache installDist
      - run:
          name: Create Relayer containers
          working_directory: services/relayer
          command: make docker
      - run:
          name: Create Message Store container
          working_directory: services/message-store
          command: make docker
      - run:
          name: Create and Start blockchains
          working_directory: test-blockchains
          background: true
          command: docker-compose build && docker-compose up
      - run: sleep 30
      - run:
          name: Build and test
          command: ./gradlew test
      - run:
          name: Stop blockchains
          working_directory: test-blockchains
          command: docker-compose stop
          when: always
      - run:
          name: Logs from bc31
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc31node1_1
          when: always
      - run:
          name: Logs from bc32
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc32node1_1
          when: always
      - run:
          name: Logs from bc33
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc33node1_1
          when: always
      - run:
          name: Logs from observer
          working_directory: test-blockchains
          command: |
            docker container logs observer
          when: always
      - run:
          name: Logs from relayer
          working_directory: test-blockchains
          command: |
            docker container logs relayer
          when: always
      - run:
          name: Logs from dispatcher
          working_directory: test-blockchains
          command: |
            docker container logs dispatcher
          when: always
      - run:
          name: Logs from msgstore
          working_directory: test-blockchains
          command: |
            docker container logs msgstore
          when: always
      - run:
          name: Remove blockchains
          working_directory: test-blockchains
          command: docker-compose down
          when: always
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  javaIntTestsMachine:
    machine:
      image: ubuntu-2004:202107-02
    resource_class: large
    steps:
      # The home directory is: /home/circleci/project
      # gpact is cloned to: /home/circleci/project/.
      # web3j is cloned to: /home/circleci/web3j-abi
      - prepare
      - run:
          name: Build web3j
          command: |
            # Build our Web3j
            cd ../web3j-abi
            ./gradlew --parallel --stacktrace --info --build-cache installDist
      - run:
          name: Create Relayer containers
          working_directory: services/relayer
          command: make docker
      - run:
          name: Create Message Store container
          working_directory: services/message-store
          command: make docker
      - run:
          name: Create and Start blockchains
          working_directory: test-blockchains
          background: true
          command: docker-compose build && docker-compose up
      - run: sleep 30
      - run:
          name: Build and test
          command: ./gradlew intTest
      - run:
          name: Stop blockchains
          working_directory: test-blockchains
          command: docker-compose stop
          when: always
      - run:
          name: Logs from bc31
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc31node1_1
          when: always
      - run:
          name: Logs from bc32
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc32node1_1
          when: always
      - run:
          name: Logs from bc33
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc33node1_1
          when: always
      - run:
          name: Logs from observer
          working_directory: test-blockchains
          command: |
            docker container logs observer
          when: always
      - run:
          name: Logs from relayer
          working_directory: test-blockchains
          command: |
            docker container logs relayer
          when: always
      - run:
          name: Logs from dispatcher
          working_directory: test-blockchains
          command: |
            docker container logs dispatcher
          when: always
      - run:
          name: Logs from msgstore
          working_directory: test-blockchains
          command: |
            docker container logs msgstore
          when: always
      - run:
          name: Remove blockchains
          working_directory: test-blockchains
          command: docker-compose down
          when: always
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  typescriptIntTestsMachine:
    machine:
      image: ubuntu-2004:202107-02
    resource_class: large
    steps:
      # The home directory is: /home/circleci/project
      # gpact is cloned to: /home/circleci/project/.
      # web3j is cloned to: /home/circleci/web3j-abi
      - prepare
      - run:
          name: Build web3j
          command: |
            # Build our Web3j
            cd ../web3j-abi
            ./gradlew --parallel --stacktrace --info --build-cache installDist
      - run:
          name: Create Relayer containers
          working_directory: services/relayer
          command: make docker
      - run:
          name: Create Message Store container
          working_directory: services/message-store
          command: make docker
      - run:
          name: Create and Start blockchains
          working_directory: sdk/js
          background: true
          command: docker-compose build && docker-compose up
      - run:
          name: Build Solidity code for use with TypeScript compile
          command: ./gradlew build -x test -x intTest -x perfTest
      - run:
          name: Create environment for testing JS-SDK
          working_directory: sdk/js
          background: true
          command: npm install
      - run: sleep 30
      - run:
          name: Test JS-SDK
          working_directory: sdk/js
          command: node ./test.js
      - run:
          name: Stop environment for testing JS-SDK
          working_directory: sdk/js
          command: docker-compose stop
          when: always
      - run:
          name: Remove blockchains
          working_directory: sdk/js
          command: docker-compose down
          when: always

  perfTestsMachine:
    machine:
      image: ubuntu-2004:202107-02
    resource_class: large
    steps:
      # The home directory is: /home/circleci/project
      # gpact is cloned to: /home/circleci/project/.
      # web3j is cloned to: /home/circleci/web3j-abi
      - prepare
      - run:
          name: Build web3j
          command: |
            # Build our Web3j
            cd ../web3j-abi
            ./gradlew --parallel --stacktrace --info --build-cache installDist
      - run:
          name: Create Relayer containers
          working_directory: services/relayer
          command: make docker
      - run:
          name: Create Message Store container
          working_directory: services/message-store
          command: make docker
      - run:
          name: Create and Start blockchains
          working_directory: test-blockchains
          background: true
          command: docker-compose build && docker-compose up
      - run: sleep 30
      - run:
          name: Build and test
          command: ./gradlew perfTest
      - run:
          name: Stop blockchains
          working_directory: test-blockchains
          command: docker-compose stop
          when: always
      - run:
          name: Logs from bc31
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc31node1_1
          when: always
      - run:
          name: Logs from bc32
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc32node1_1
          when: always
      - run:
          name: Logs from bc33
          working_directory: test-blockchains
          command: |
            docker container logs test-blockchains_bc33node1_1
          when: always
      - run:
          name: Logs from observer
          working_directory: test-blockchains
          command: |
            docker container logs observer
          when: always
      - run:
          name: Logs from relayer
          working_directory: test-blockchains
          command: |
            docker container logs relayer
          when: always
      - run:
          name: Logs from dispatcher
          working_directory: test-blockchains
          command: |
            docker container logs dispatcher
          when: always
      - run:
          name: Logs from msgstore
          working_directory: test-blockchains
          command: |
            docker container logs msgstore
          when: always
      - run:
          name: Remove blockchains
          working_directory: test-blockchains
          command: docker-compose down
          when: always
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  relayer-build:
    docker:
      - image: cimg/go:1.17.3
    environment:
      TERM: xterm-256color
      COLORTERM: 24bit
    steps:
      - checkout
      - run:
          name: Verify checkout
          command: |
            date -Is
            echo; git -P reflog --date=iso
            go version
      - run:
          name: Build production code and test code
          command: make buildall
          working_directory: ~/project/services/relayer

  relayer-test:
    machine:
      image: ubuntu-2004:202111-01
    resource_class: large
    steps:
      - checkout
      - run:
          name: Verify checkout
          command: |
            date -Is
            echo; git -P reflog --date=iso
            go version
            pwd
            ls -al
            echo GOROOT: $GOROOT
      - run:
          name: Build relayer docker container
          command: make docker
          working_directory: services/relayer
      - run:
          name: Build message store docker container
          command: make docker
          working_directory: services/message-store
      - run:
          name: Create and Start blockchains & Relayers
          working_directory: services/relayer
          background: true
          command: docker-compose up
      - run: sleep 30
      - run:
          name: Build test code and execute unit tests
          command: make utest itest
          working_directory: services/relayer
      - run:
          name: Stop blockchains & Relayers
          working_directory: services/relayer
          command: docker-compose stop
          when: always
      - run:
          name: Remove blockchains & Relayers
          working_directory: services/relayer
          command: docker-compose down
          when: always

unitTestsMachine:
  machine:
    image: ubuntu-2004:202111-01
  resource_class: small
  steps:
    - run:
        name: Dummy task that the github side of the CircleCi - Github integration is waiting on
        command: |
          ls -al

workflows:
  version: 2
  default:
    jobs:
      - relayer-build
      - javasdk-build
      - relayer-test:
          requires:
            - relayer-build
      - javaUnitTestsMachine:
          requires:
            - relayer-build
            - javasdk-build
      - javaIntTestsMachine:
          requires:
            - relayer-build
            - javasdk-build
      - perfTestsMachine:
          requires:
            - relayer-build
            - javasdk-build
      - typescriptIntTestsMachine:
          requires:
            - relayer-build
            - javasdk-build
      - unitTestsMachine:
