package net.consensys.gpact.soliditywrappers.applications.twentyacts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.7-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class TwentyActs extends Contract {
    public static final String BINARY = "60a06040523480156200001157600080fd5b506040516200397b3803806200397b8339810160408190526200003491620001ad565b6000805460ff19168155600280546001600160a01b03191633908117909155604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350336200008e60008262000115565b620000ba7f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd58262000115565b620000e67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8262000115565b50608092909252600f55601080546001600160a01b0319166001600160a01b03909216919091179055620001f5565b62000121828262000125565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001215760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600080600060608486031215620001c357600080fd5b83516020850151604086015191945092506001600160a01b0381168114620001ea57600080fd5b809150509250925092565b60805161374e6200022d6000396000818161038601528181610e7a0152818161147701528181611a980152612097015261374e6000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c806388c9bcce11610146578063b0d94a97116100c3578063d42a85e211610087578063d42a85e2146105f2578063d547741f14610626578063da95ebf714610639578063e63ab1e91461064c578063ee2eefa214610673578063f2fde38b1461068657600080fd5b8063b0d94a9714610553578063b283209614610566578063b76722ed14610579578063cd47bde1146105a4578063d0516650146105cf57600080fd5b806391d148541161010a57806391d14854146104f957806393cedc141461050c5780639c8d83bb14610515578063a217fddf14610538578063ac869cd81461054057600080fd5b806388c9bcce146104745780638da5cb5b146104875780638f601f66146104985780639017f79e146104c3578063917af2d7146104e657600080fd5b8063439160df116101df5780635e7616fb116101a35780635e7616fb146104005780636056a52a1461041357806363ea34dc14610426578063715018a6146104395780638104d375146104415780638456cb591461046c57600080fd5b8063439160df1461038157806343a12224146103a857806347e7ef24146103cf5780634abf24cb146103e25780635c975abb146103f557600080fd5b80632b302cbd116102265780632b302cbd146103085780632f2ff15d14610333578063327c810e1461034657806336568abe146103665780633f4ba83a1461037957600080fd5b806301ffc9a7146102635780630715ffb81461028b57806313bd55ae146102a057806319836dc7146102c3578063248a9ca3146102d6575b600080fd5b610276610271366004612cd8565b610699565b60405190151581526020015b60405180910390f35b61029e610299366004612d1e565b6106d0565b005b6102766102ae366004612d39565b60066020526000908152604090205460ff1681565b61029e6102d1366004612d52565b610755565b6102fa6102e4366004612d39565b6000908152600160208190526040909120015490565b604051908152602001610282565b6102fa610316366004612d7e565b600c60209081526000928352604080842090915290825290205481565b61029e610341366004612d52565b6107ad565b6102fa610354366004612d39565b60056020526000908152604090205481565b61029e610374366004612d52565b61083d565b61029e6108b7565b6102fa7f000000000000000000000000000000000000000000000000000000000000000081565b6102fa7f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd581565b61029e6103dd366004612da8565b610937565b61029e6103f0366004612d1e565b610b2b565b60005460ff16610276565b61029e61040e366004612e34565b610e1e565b61029e610421366004612eb9565b6111ab565b61029e610434366004612ef5565b6112a7565b61029e6117b5565b601054610454906001600160a01b031681565b6040516001600160a01b039091168152602001610282565b61029e611829565b61029e610482366004612f23565b6118a7565b6002546001600160a01b0316610454565b6102fa6104a6366004612d7e565b600b60209081526000928352604080842090915290825290205481565b6102766104d1366004612d1e565b60086020526000908152604090205460ff1681565b61029e6104f4366004612d39565b611932565b610276610507366004612d52565b61198e565b6102fa600f5481565b610276610523366004612d1e565b60096020526000908152604090205460ff1681565b6102fa600081565b61029e61054e366004612f23565b6119b9565b61029e610561366004612e34565b611a3c565b61029e610574366004612d52565b611d68565b6102fa610587366004612d7e565b600e60209081526000928352604080842090915290825290205481565b6102fa6105b2366004612d7e565b600d60209081526000928352604080842090915290825290205481565b6102766105dd366004612d1e565b600a6020526000908152604090205460ff1681565b610454610600366004612da8565b60076020908152600092835260408084209091529082529020546001600160a01b031681565b61029e610634366004612d52565b611e5b565b61029e610647366004612da8565b611edc565b6102fa7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61029e610681366004612f5a565b61203d565b61029e610694366004612d1e565b6126d2565b60006001600160e01b03198216637965db0b60e01b14806106ca57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6106db60003361198e565b6107005760405162461bcd60e51b81526004016106f79061300a565b60405180910390fd5b601080546001600160a01b0319166001600160a01b0383169081179091556040519081527f8595ef221e673f6783c57729d5bfd384816a8988a19fe1b3e1c5379d8efb0857906020015b60405180910390a150565b6002546001600160a01b0316331461077f5760405162461bcd60e51b81526004016106f790613041565b60009182526004602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b600082815260016020819052604090912001546107cb905b3361198e565b61082f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b60648201526084016106f7565b61083982826127bd565b5050565b6001600160a01b03811633146108ad5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106f7565b6108398282612828565b6108e17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361198e565b61092d5760405162461bcd60e51b815260206004820152601c60248201527f3230414354533a4d75737420686176652050415553455220726f6c650000000060448201526064016106f7565b61093561288f565b565b6001600160a01b03821660009081526008602052604090205460ff166109b75760405162461bcd60e51b815260206004820152602f60248201527f3230414354533a4465706f73697473206e6f7420616c6c6f77656420666f722060448201526e115490c80c8c0818dbdb9d1c9858dd608a1b60648201526084016106f7565b3360009081526009602052604090205460ff1615610a2e5760405162461bcd60e51b815260206004820152602e60248201527f3230414354533a4163636f756e742069732062616e6e65642066726f6d20646560448201526d706f736974696e672066756e647360901b60648201526084016106f7565b336000908152600b602090815260408083206001600160a01b038616845290915281208054839290610a6190849061308c565b90915550506040516323b872dd60e01b815282906001600160a01b038216906323b872dd90610a98903390309087906004016130a4565b602060405180830381600087803b158015610ab257600080fd5b505af1158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea91906130c8565b507f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7338484604051610b1e939291906130a4565b60405180910390a1505050565b336000908152600e602090815260408083206001600160a01b0385168452909152902054610b9b5760405162461bcd60e51b815260206004820152601b60248201527f3230414354533a4e6f20616374697665207769746864726177616c000000000060448201526064016106f7565b336000908152600e602090815260408083206001600160a01b03851684529091529020544210610c195760405162461bcd60e51b815260206004820152602360248201527f3230414354533a417474656d7074696e6720746f207769746864726177206561604482015262726c7960e81b60648201526084016106f7565b336000908152600a602052604090205460ff1615610c715760405162461bcd60e51b8152602060048201526015602482015274191820a1aa299d20b1b1b7bab73a10333937bd32b760591b60448201526064016106f7565b336000818152600b602090815260408083206001600160a01b03861680855290835281842054948452600d8352818420908452909152902054808211610d0d5760405162461bcd60e51b815260206004820152602b60248201527f3230414354533a5769746864726177616c20616d6f756e74203e206465706f7360448201526a1a5d195908185b5bdd5b9d60aa1b60648201526084016106f7565b336000908152600d602090815260408083206001600160a01b0387168452909152812055610d3b81836130e5565b336000818152600b602090815260408083206001600160a01b038916808552925291829020939093555163a9059cbb60e01b815260048101919091526024810183905284919063a9059cbb90604401602060405180830381600087803b158015610da457600080fd5b505af1158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc91906130c8565b507fbdbab621b41ebbdfd69d5b112d0fd944ec222aefc6389d5e62a567873f70b614338584604051610e10939291906130a4565b60405180910390a150505050565b600085604051602001610e3191906130fc565b60408051601f19818403018152918152815160209283012060008181526005909352912054909150600114610e785760405162461bcd60e51b81526004016106f7906131d9565b7f0000000000000000000000000000000000000000000000000000000000000000866020013514610ebb5760405162461bcd60e51b81526004016106f79061321b565b60608601356000818152600460205260409020546001600160a01b031690610f0890827ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb889898989612922565b6000610f1686880188612d39565b9050808314610f795760405162461bcd60e51b815260206004820152602960248201527f3230414354533a496e636f72726563742046696e616c697a65206f6e2054617260448201526819d95d08195d995b9d60ba1b60648201526084016106f7565b6000610140890135610f956101208b01356101008c013561308c565b610f9f919061308c565b90506000610fb360608b0160408c01612d1e565b905081600c6000610fca60c08e0160a08f01612d1e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b03168152602001908152602001600020600082825461101c91906130e5565b90915550829050600b600061103760c08e0160a08f01612d1e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b03168152602001908152602001600020600082825461108991906130e5565b909155506110a390506101208b01356101008c013561308c565b600b60006110b86101008e0160e08f01612d1e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b03168152602001908152602001600020600082825461110a919061308c565b90915550506010546001600160a01b039081166000908152600b60209081526040808320938516835292905290812080546101408d0135929061114e90849061308c565b90915550506000858152600560205260409081902060039055517fa1775c1feb2a037de55a5c0f4bea4b713d77fb67da2490e8440d85202f9de8ba906111979087815260200190565b60405180910390a150505050505050505050565b6111d57f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd53361198e565b6112215760405162461bcd60e51b815260206004820152601d60248201527f3230414354533a4d7573742068617665204d415050494e4720726f6c6500000060448201526064016106f7565b6001600160a01b038381166000818152600860209081526040808320805460ff191660011790556007825280832087845282529182902080549486166001600160a01b031990951685179055815192835282018590528101919091527f50b50bfc85bd27d4d10729da017c95d43e415ff0b7ff52e4b4733e5e77b7ee0390606001610b1e565b6000816040516020016112ba91906130fc565b60408051601f19818403018152918152815160209283012060008181526005909352912054909150156112ff5760405162461bcd60e51b81526004016106f790613252565b6020808301356000908152600490915260409020546001600160a01b0316806113905760405162461bcd60e51b815260206004820152603760248201527f3230414354533a536f7572636520626c6f636b636861696e206e6f742073757060448201527f706f72746564206279207461726765742032304143545300000000000000000060648201526084016106f7565b60006113a260a0850160808601612d1e565b905060006007816113b960a0880160808901612d1e565b6001600160a01b03908116825260208083019390935260409182016000908120898501358252909352918190205490911691506113fc9060608701908701612d1e565b6001600160a01b0316816001600160a01b0316146114755760405162461bcd60e51b815260206004820152603060248201527f3230414354533a546f6b656e206e6f74207472616e7366657261626c6520746f60448201526f0207265717565737465642045524332360841b60648201526084016106f7565b7f00000000000000000000000000000000000000000000000000000000000000008560600135146114b85760405162461bcd60e51b81526004016106f79061321b565b6114c9610100860160e08701612d1e565b6001600160a01b0316336001600160a01b03161461153e5760405162461bcd60e51b815260206004820152602c60248201527f3230414354533a6d73672e73656e646572206d757374206265206c697175696460448201526b34ba3c90383937bb34b232b960a11b60648201526084016106f7565b336000818152600b602090815260408083206001600160a01b03871680855290835281842054858552600c8452828520828652845282852054958552600d84528285209185529252909120546101008801359290838161159e84866130e5565b6115a891906130e5565b10156115c65760405162461bcd60e51b81526004016106f790613297565b42896101600135106115ea5760405162461bcd60e51b81526004016106f7906132e1565b428961018001351161163e5760405162461bcd60e51b815260206004820181905260248201527f3230414354533a5472616e73616374696f6e206861732074696d6564206f757460448201526064016106f7565b6009600061165260c08c0160a08d01612d1e565b6001600160a01b0316815260208101919091526040016000205460ff16156116bc5760405162461bcd60e51b815260206004820152601760248201527f3230414354533a53656e6465722069732062616e6e656400000000000000000060448201526064016106f7565b600960006116d060e08c0160c08d01612d1e565b6001600160a01b0316815260208101919091526040016000205460ff161561173a5760405162461bcd60e51b815260206004820152601a60248201527f3230414354533a526563697069656e742069732062616e6e656400000000000060448201526064016106f7565b611744848361308c565b336000908152600c602090815260408083206001600160a01b038b1684528252808320939093558a825260058152908290206001905590518981527febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b910160405180910390a1505050505050505050565b6002546001600160a01b031633146117df5760405162461bcd60e51b81526004016106f790613041565b6002546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280546001600160a01b0319169055565b6118537f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361198e565b61189f5760405162461bcd60e51b815260206004820152601c60248201527f3230414354533a4d75737420686176652050415553455220726f6c650000000060448201526064016106f7565b610935612aa6565b6118b260003361198e565b6118ce5760405162461bcd60e51b81526004016106f79061300a565b6001600160a01b038216600081815260096020908152604091829020805460ff19168515159081179091558251938452908301527fbe490a041de95d684835a21f3975102b719d9ede8cf410d4b6b06440bf83950991015b60405180910390a15050565b61193d60003361198e565b6119595760405162461bcd60e51b81526004016106f79061300a565b600f8190556040518181527f55203dc9650fae2941ab9c23c9f334c45d4108b43ce1bd822ed59f448e68d53e9060200161074a565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6119c460003361198e565b6119e05760405162461bcd60e51b81526004016106f79061300a565b6001600160a01b0382166000818152600a6020908152604091829020805460ff19168515159081179091558251938452908301527f713eb400302cebac61f82eb8de5051d38458517ffac43ae45f4a9fd5d09ee6989101611926565b600085604051602001611a4f91906130fc565b60408051601f19818403018152918152815160209283012060008181526005909352912054909150600114611a965760405162461bcd60e51b81526004016106f7906131d9565b7f0000000000000000000000000000000000000000000000000000000000000000866060013514611ad95760405162461bcd60e51b81526004016106f79061321b565b602080870135600081815260049092526040909120546001600160a01b031690611b1690826000805160206136f983398151915289898989612922565b600080611b2587890189613397565b50919350915050838214611ba15760405162461bcd60e51b815260206004820152603d60248201527f3230414354533a2046696e616c697a65204f6e205461726765743a20496e636f60448201527f72726563742050726570617265204f6e20536f75726365206576656e7400000060648201526084016106f7565b6000611bb46101008b0160e08c01612d1e565b90506000611bc860a08c0160808d01612d1e565b6001600160a01b038084166000908152600c60209081526040808320938516835292905290812080549293506101008e013592909190611c099084906130e5565b90915550508215611d15576000868152600560209081526040808320600390556001600160a01b038086168452600b83528184209085168452909152812080546101008e01359290611c5c9084906130e5565b925050819055506000819050806001600160a01b031663a9059cbb8d60c0016020810190611c8a9190612d1e565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526101008f01356024820152604401602060405180830381600087803b158015611cd657600080fd5b505af1158015611cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0e91906130c8565b5050611d28565b6000868152600560205260409020600290555b6040518681527ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb89060200160405180910390a15050505050505050505050565b6002546001600160a01b03163314611d925760405162461bcd60e51b81526004016106f790613041565b81611dd75760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908189b1bd8dad8da185a5b881a59605a1b60448201526064016106f7565b6001600160a01b038116611e2d5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642076657269666965722061646472657373000000000000000060448201526064016106f7565b60009182526003602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b60008281526001602081905260409091200154611e77906107c5565b6108ad5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b60648201526084016106f7565b336000908152600e602090815260408083206001600160a01b038616845290915290205415611f4d5760405162461bcd60e51b815260206004820152601860248201527f3230414354533a416374697665207769746864726177616c000000000000000060448201526064016106f7565b336000818152600b602090815260408083206001600160a01b03871680855290835281842054948452600c835281842090845290915290205482611f9182846130e5565b1015611faf5760405162461bcd60e51b81526004016106f790613297565b336000908152600d602090815260408083206001600160a01b03881684529091529020839055600f54611fe390429061308c565b336000818152600e602090815260408083206001600160a01b038a168452909152908190209290925590517f04c56a409d50971e45c5a2d96e5d557d2b0f1d66d40f14b141e4c958b0f39b3291610e1091879087906130a4565b60008760405160200161205091906130fc565b60408051601f19818403018152918152815160209283012060008181526005909352912054909150156120955760405162461bcd60e51b81526004016106f790613252565b7f00000000000000000000000000000000000000000000000000000000000000008860200135146120d85760405162461bcd60e51b81526004016106f79061321b565b42886101600135106120fc5760405162461bcd60e51b81526004016106f7906132e1565b60608801356000908152600460205260409020546001600160a01b031680612172576040805183815260006020820181905260018284015260806060830181905282015290516000805160206136f98339815191529181900360a00190a1506000908152600560205260409020600290556126c9565b6121a58960600135827febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b8b8b8b8b612922565b60006121b3888a018a612d39565b90508083146122155760405162461bcd60e51b815260206004820152602860248201527f3230414354533a496e636f72726563742050726570617265204f6e2054617267604482015267195d08195d995b9d60c21b60648201526084016106f7565b50600061222860608b0160408c01612d1e565b9050600060076000836001600160a01b03166001600160a01b0316815260200190815260200160002060008c60600135815260200190815260200160002060009054906101000a90046001600160a01b031690508a608001602081019061228f9190612d1e565b6001600160a01b0316816001600160a01b0316146122fd576040805185815260006020820181905260028284015260806060830181905282015290516000805160206136f98339815191529181900360a00190a15050506000908152600560205260409020600290556126c9565b50428a6101800135101561236857604080518481526000602082018190526003928201929092526080606082018190528101919091526000805160206136f98339815191529060a0015b60405180910390a150506000908152600560205260409020600290556126c9565b6009600061237c60c08d0160a08e01612d1e565b6001600160a01b0316815260208101919091526040016000205460ff16156123de57604080518481526000602082018190526005928201929092526080606082018190528101919091526000805160206136f98339815191529060a001612347565b600960006123f260e08d0160c08e01612d1e565b6001600160a01b0316815260208101919091526040016000205460ff161561245457604080518481526000602082018190526006928201929092526080606082018190528101919091526000805160206136f98339815191529060a001612347565b60006101408b01356124706101208d01356101008e013561308c565b61247a919061308c565b9050600080836001600160a01b03166323b872dd60e01b8e60a00160208101906124a49190612d1e565b30866040516024016124b8939291906130a4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516124f6919061346d565b6000604051808303816000865af19150503d8060008114612533576040519150601f19603f3d011682016040523d82523d6000602084013e612538565b606091505b509150915081612593576000805160206136f9833981519152866000600461255f85612b21565b60405161256f94939291906134b5565b60405180910390a150505060009283525050600560205260409020600290556126c9565b82600b60008f60a00160208101906125ab9190612d1e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866001600160a01b03166001600160a01b0316815260200190815260200160002060008282546125fd919061308c565b9250508190555082600c60008f60a001602081019061261c9190612d1e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866001600160a01b03166001600160a01b03168152602001908152602001600020600082825461266e919061308c565b9091555050600086815260056020908152604080832060019081905581518a81529283015281018290526080606082018190528101919091526000805160206136f98339815191529060a00160405180910390a15050505050505b50505050505050565b6002546001600160a01b031633146126fc5760405162461bcd60e51b81526004016106f790613041565b6001600160a01b0381166127615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f7565b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b6127c7828261198e565b6108395760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b612832828261198e565b156108395760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60005460ff166128d85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f7565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000878152600360205260409020546001600160a01b0316806129955760405162461bcd60e51b815260206004820152602560248201527f4e6f207265676973746572656420766572696669657220666f7220626c6f636b60448201526431b430b4b760d91b60648201526084016106f7565b6000888152600460205260409020546001600160a01b03888116911614612a0c5760405162461bcd60e51b815260206004820152602560248201527f44617461206e6f7420656d697474656420627920617070726f76656420636f6e6044820152641d1c9858dd60da1b60648201526084016106f7565b60008888888888604051602001612a279594939291906134e6565b60408051601f198184030181529082905263260e748160e11b825291506001600160a01b03831690634c1ce90290612a6b908c908b9086908a908a90600401613520565b60006040518083038186803b158015612a8357600080fd5b505afa158015612a97573d6000803e3d6000fd5b50505050505050505050505050565b60005460ff1615612aec5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f7565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586129053390565b6060602482511015612b5d57612b378251612bd2565b604051602001612b479190613574565b6040516020818303038152906040529050919050565b81516004909201916044118015612bb757600083806020019051810190612b8491906135ca565b9050612b8f81612bd2565b604051602001612b9f91906135e3565b60405160208183030381529060405292505050919050565b82806020019051810190612bcb9190613612565b9392505050565b606081612bf65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612c205780612c0a81613689565b9150612c199050600a836136ba565b9150612bfa565b60008167ffffffffffffffff811115612c3b57612c3b613328565b6040519080825280601f01601f191660200182016040528015612c65576020820181803683370190505b5090505b8415612cd057612c7a6001836130e5565b9150612c87600a866136ce565b612c9290603061308c565b60f81b818381518110612ca757612ca76136e2565b60200101906001600160f81b031916908160001a905350612cc9600a866136ba565b9450612c69565b949350505050565b600060208284031215612cea57600080fd5b81356001600160e01b031981168114612bcb57600080fd5b80356001600160a01b0381168114612d1957600080fd5b919050565b600060208284031215612d3057600080fd5b612bcb82612d02565b600060208284031215612d4b57600080fd5b5035919050565b60008060408385031215612d6557600080fd5b82359150612d7560208401612d02565b90509250929050565b60008060408385031215612d9157600080fd5b612d9a83612d02565b9150612d7560208401612d02565b60008060408385031215612dbb57600080fd5b612dc483612d02565b946020939093013593505050565b60006101a08284031215612de557600080fd5b50919050565b60008083601f840112612dfd57600080fd5b50813567ffffffffffffffff811115612e1557600080fd5b602083019150836020828501011115612e2d57600080fd5b9250929050565b60008060008060006101e08688031215612e4d57600080fd5b612e578787612dd2565b94506101a086013567ffffffffffffffff80821115612e7557600080fd5b612e8189838a01612deb565b90965094506101c0880135915080821115612e9b57600080fd5b50612ea888828901612deb565b969995985093965092949392505050565b600080600060608486031215612ece57600080fd5b612ed784612d02565b925060208401359150612eec60408501612d02565b90509250925092565b60006101a08284031215612f0857600080fd5b612bcb8383612dd2565b8015158114612f2057600080fd5b50565b60008060408385031215612f3657600080fd5b612f3f83612d02565b91506020830135612f4f81612f12565b809150509250929050565b6000806000806000806000610200888a031215612f7657600080fd5b612f808989612dd2565b96506101a088013567ffffffffffffffff80821115612f9e57600080fd5b612faa8b838c01612deb565b90985096506101c08a0135915080821115612fc457600080fd5b612fd08b838c01612deb565b90965094506101e08a0135915080821115612fea57600080fd5b50612ff78a828b01612deb565b989b979a50959850939692959293505050565b6020808252601b908201527f3230414354533a4d75737420686176652041444d494e20726f6c650000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561309f5761309f613076565b500190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156130da57600080fd5b8151612bcb81612f12565b6000828210156130f7576130f7613076565b500390565b81358152602080830135908201526101a0810161311b60408401612d02565b6001600160a01b031660408301526060838101359083015261313f60808401612d02565b6001600160a01b0316608083015261315960a08401612d02565b6001600160a01b031660a083015261317360c08401612d02565b6001600160a01b031660c083015261318d60e08401612d02565b6001600160a01b031660e0830152610100838101359083015261012080840135908301526101408084013590830152610160808401359083015261018092830135929091019190915290565b60208082526022908201527f3230414354533a5472616e73616374696f6e206e6f7420696e2070726f677265604082015261737360f01b606082015260800190565b6020808252601e908201527f3230414354533a4e6f7420666f72207468697320626c6f636b636861696e0000604082015260600190565b60208082526025908201527f3230414354533a5472616e73616374696f6e20616c72656164792072656769736040820152641d195c995960da1b606082015260800190565b6020808252602a908201527f3230414354533a416d6f756e74206578636565647320756e616c6c6f6361746560408201526964206465706f7369747360b01b606082015260800190565b60208082526027908201527f3230414354533a42696464696e6720706572696f64207374696c6c20696e2070604082015266726f677265737360c81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561336757613367613328565b604052919050565b600067ffffffffffffffff82111561338957613389613328565b50601f01601f191660200190565b600080600080608085870312156133ad57600080fd5b8435935060208501356133bf81612f12565b925060408501359150606085013567ffffffffffffffff8111156133e257600080fd5b8501601f810187136133f357600080fd5b80356134066134018261336f565b61333e565b81815288602083850101111561341b57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60005b83811015613458578181015183820152602001613440565b83811115613467576000848401525b50505050565b6000825161347f81846020870161343d565b9190910192915050565b600081518084526134a181602086016020860161343d565b601f01601f19169290920160200192915050565b84815283151560208201528260408201526080606082015260006134dc6080830184613489565b9695505050505050565b8581526bffffffffffffffffffffffff198560601b1660208201528360348201528183605483013760009101605401908152949350505050565b85815284602082015260806040820152600061353f6080830186613489565b8281036060840152838152838560208301376000602085830101526020601f19601f8601168201019150509695505050505050565b7f52657665727420666f7220756e6b6e6f776e206572726f722e204572726f722081526703632b733ba341d160c51b6020820152600082516135bd81602885016020870161343d565b9190910160280192915050565b6000602082840312156135dc57600080fd5b5051919050565b6602830b734b19d160cd1b81526000825161360581600785016020870161343d565b9190910160070192915050565b60006020828403121561362457600080fd5b815167ffffffffffffffff81111561363b57600080fd5b8201601f8101841361364c57600080fd5b805161365a6134018261336f565b81815285602083850101111561366f57600080fd5b61368082602083016020860161343d565b95945050505050565b600060001982141561369d5761369d613076565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826136c9576136c96136a4565b500490565b6000826136dd576136dd6136a4565b500690565b634e487b7160e01b600052603260045260246000fdfe915add4368b699f4256098461a22d41dad802a0938602d4ae1d5e5e7133a908ca2646970667358221220ddf99aee33fa8205028bdd9258fbc55c186562a8d3def6a4ec768be720ea35c664736f6c63430008090033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_MAPPING_ROLE = "MAPPING_ROLE";

    public static final String FUNC_PAUSER_ROLE = "PAUSER_ROLE";

    public static final String FUNC_ADDREMOTECROSSCHAINCONTROL = "addRemoteCrosschainControl";

    public static final String FUNC_ADDVERIFIER = "addVerifier";

    public static final String FUNC_ALLOCATED = "allocated";

    public static final String FUNC_BANNED = "banned";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_DEPOSITS = "deposits";

    public static final String FUNC_ERC20ADDRESSMAPPING = "erc20AddressMapping";

    public static final String FUNC_ERC20SUPPORTED = "erc20Supported";

    public static final String FUNC_FINALIZEONSOURCE = "finalizeOnSource";

    public static final String FUNC_FINALIZEONTARGET = "finalizeOnTarget";

    public static final String FUNC_FINALIZEWITHDRAWAL = "finalizeWithdrawal";

    public static final String FUNC_FROZEN = "frozen";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_INFRASTRUCTUREACCOUNT = "infrastructureAccount";

    public static final String FUNC_MYBLOCKCHAINID = "myBlockchainId";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_PREPAREONSOURCE = "prepareOnSource";

    public static final String FUNC_PREPAREONTARGET = "prepareOnTarget";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REQUESTWITHDRAWAL = "requestWithdrawal";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETBANNED = "setBanned";

    public static final String FUNC_SETERC20MAPPING = "setErc20Mapping";

    public static final String FUNC_SETFROZEN = "setFrozen";

    public static final String FUNC_SETINFRASTRUCTUREACCOUNT = "setInfrastructureAccount";

    public static final String FUNC_SETWITHDRAWALWAITPERIOD = "setWithdrawalWaitPeriod";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_TXCOMPLETE = "txComplete";

    public static final String FUNC_TXSTATE = "txState";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_WITHDRAWALWAITPERIOD = "withdrawalWaitPeriod";

    public static final String FUNC_WITHDRAWALS = "withdrawals";

    public static final String FUNC_WITHDRAWALSTIME = "withdrawalsTime";

    public static final Event BANNED_EVENT = new Event("Banned", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event DEPOSITED_EVENT = new Event("Deposited", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ERC20ADDRESSMAPPINGCHANGED_EVENT = new Event("ERC20AddressMappingChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event FINALIZEONSOURCE_EVENT = new Event("FinalizeOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event FINALIZEONTARGET_EVENT = new Event("FinalizeOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event FINALIZEWITHDRAWAL_EVENT = new Event("FinalizeWithdrawal", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event FROZEN_EVENT = new Event("Frozen", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PAUSED_EVENT = new Event("Paused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event PREPAREONSOURCE_EVENT = new Event("PrepareOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event PREPAREONTARGET_EVENT = new Event("PrepareOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event SETINFRASTRUCTUREACCOUNT_EVENT = new Event("SetInfrastructureAccount", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event SETWITHDRAWALWAITPERIOD_EVENT = new Event("SetWithdrawalWaitPeriod", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event WITHDRAWALREQUESTED_EVENT = new Event("WithdrawalRequested", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<BannedEventResponse> getBannedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BANNED_EVENT, transactionReceipt);
        ArrayList<BannedEventResponse> responses = new ArrayList<BannedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BannedEventResponse typedResponse = new BannedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._banned = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BannedEventResponse> bannedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, BannedEventResponse>() {
            @Override
            public BannedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BANNED_EVENT, log);
                BannedEventResponse typedResponse = new BannedEventResponse();
                typedResponse.log = log;
                typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._banned = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BannedEventResponse> bannedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BANNED_EVENT));
        return bannedEventFlowable(filter);
    }

    public List<DepositedEventResponse> getDepositedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DEPOSITED_EVENT, transactionReceipt);
        ArrayList<DepositedEventResponse> responses = new ArrayList<DepositedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DepositedEventResponse typedResponse = new DepositedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DepositedEventResponse> depositedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DepositedEventResponse>() {
            @Override
            public DepositedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DEPOSITED_EVENT, log);
                DepositedEventResponse typedResponse = new DepositedEventResponse();
                typedResponse.log = log;
                typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DepositedEventResponse> depositedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DEPOSITED_EVENT));
        return depositedEventFlowable(filter);
    }

    public List<ERC20AddressMappingChangedEventResponse> getERC20AddressMappingChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ERC20ADDRESSMAPPINGCHANGED_EVENT, transactionReceipt);
        ArrayList<ERC20AddressMappingChangedEventResponse> responses = new ArrayList<ERC20AddressMappingChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ERC20AddressMappingChangedEventResponse typedResponse = new ERC20AddressMappingChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._thisBcTokenContract = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._otherBcId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._othercTokenContract = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ERC20AddressMappingChangedEventResponse> eRC20AddressMappingChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ERC20AddressMappingChangedEventResponse>() {
            @Override
            public ERC20AddressMappingChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ERC20ADDRESSMAPPINGCHANGED_EVENT, log);
                ERC20AddressMappingChangedEventResponse typedResponse = new ERC20AddressMappingChangedEventResponse();
                typedResponse.log = log;
                typedResponse._thisBcTokenContract = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._otherBcId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._othercTokenContract = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ERC20AddressMappingChangedEventResponse> eRC20AddressMappingChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ERC20ADDRESSMAPPINGCHANGED_EVENT));
        return eRC20AddressMappingChangedEventFlowable(filter);
    }

    public List<FinalizeOnSourceEventResponse> getFinalizeOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, transactionReceipt);
        ArrayList<FinalizeOnSourceEventResponse> responses = new ArrayList<FinalizeOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnSourceEventResponse>() {
            @Override
            public FinalizeOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, log);
                FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONSOURCE_EVENT));
        return finalizeOnSourceEventFlowable(filter);
    }

    public List<FinalizeOnTargetEventResponse> getFinalizeOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, transactionReceipt);
        ArrayList<FinalizeOnTargetEventResponse> responses = new ArrayList<FinalizeOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnTargetEventResponse>() {
            @Override
            public FinalizeOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, log);
                FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONTARGET_EVENT));
        return finalizeOnTargetEventFlowable(filter);
    }

    public List<FinalizeWithdrawalEventResponse> getFinalizeWithdrawalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEWITHDRAWAL_EVENT, transactionReceipt);
        ArrayList<FinalizeWithdrawalEventResponse> responses = new ArrayList<FinalizeWithdrawalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeWithdrawalEventResponse typedResponse = new FinalizeWithdrawalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeWithdrawalEventResponse> finalizeWithdrawalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeWithdrawalEventResponse>() {
            @Override
            public FinalizeWithdrawalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEWITHDRAWAL_EVENT, log);
                FinalizeWithdrawalEventResponse typedResponse = new FinalizeWithdrawalEventResponse();
                typedResponse.log = log;
                typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeWithdrawalEventResponse> finalizeWithdrawalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEWITHDRAWAL_EVENT));
        return finalizeWithdrawalEventFlowable(filter);
    }

    public List<FrozenEventResponse> getFrozenEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FROZEN_EVENT, transactionReceipt);
        ArrayList<FrozenEventResponse> responses = new ArrayList<FrozenEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FrozenEventResponse typedResponse = new FrozenEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._frozen = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FrozenEventResponse> frozenEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FrozenEventResponse>() {
            @Override
            public FrozenEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FROZEN_EVENT, log);
                FrozenEventResponse typedResponse = new FrozenEventResponse();
                typedResponse.log = log;
                typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._frozen = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FrozenEventResponse> frozenEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FROZEN_EVENT));
        return frozenEventFlowable(filter);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<PausedEventResponse> getPausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSED_EVENT, transactionReceipt);
        ArrayList<PausedEventResponse> responses = new ArrayList<PausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PausedEventResponse typedResponse = new PausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PausedEventResponse>() {
            @Override
            public PausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSED_EVENT, log);
                PausedEventResponse typedResponse = new PausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public List<PrepareOnSourceEventResponse> getPrepareOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, transactionReceipt);
        ArrayList<PrepareOnSourceEventResponse> responses = new ArrayList<PrepareOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnSourceEventResponse>() {
            @Override
            public PrepareOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, log);
                PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONSOURCE_EVENT));
        return prepareOnSourceEventFlowable(filter);
    }

    public List<PrepareOnTargetEventResponse> getPrepareOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONTARGET_EVENT, transactionReceipt);
        ArrayList<PrepareOnTargetEventResponse> responses = new ArrayList<PrepareOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnTargetEventResponse>() {
            @Override
            public PrepareOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONTARGET_EVENT, log);
                PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONTARGET_EVENT));
        return prepareOnTargetEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<SetInfrastructureAccountEventResponse> getSetInfrastructureAccountEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SETINFRASTRUCTUREACCOUNT_EVENT, transactionReceipt);
        ArrayList<SetInfrastructureAccountEventResponse> responses = new ArrayList<SetInfrastructureAccountEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SetInfrastructureAccountEventResponse typedResponse = new SetInfrastructureAccountEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SetInfrastructureAccountEventResponse> setInfrastructureAccountEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SetInfrastructureAccountEventResponse>() {
            @Override
            public SetInfrastructureAccountEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SETINFRASTRUCTUREACCOUNT_EVENT, log);
                SetInfrastructureAccountEventResponse typedResponse = new SetInfrastructureAccountEventResponse();
                typedResponse.log = log;
                typedResponse._account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SetInfrastructureAccountEventResponse> setInfrastructureAccountEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SETINFRASTRUCTUREACCOUNT_EVENT));
        return setInfrastructureAccountEventFlowable(filter);
    }

    public List<SetWithdrawalWaitPeriodEventResponse> getSetWithdrawalWaitPeriodEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SETWITHDRAWALWAITPERIOD_EVENT, transactionReceipt);
        ArrayList<SetWithdrawalWaitPeriodEventResponse> responses = new ArrayList<SetWithdrawalWaitPeriodEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SetWithdrawalWaitPeriodEventResponse typedResponse = new SetWithdrawalWaitPeriodEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._waitPeriodInSeconds = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SetWithdrawalWaitPeriodEventResponse> setWithdrawalWaitPeriodEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SetWithdrawalWaitPeriodEventResponse>() {
            @Override
            public SetWithdrawalWaitPeriodEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SETWITHDRAWALWAITPERIOD_EVENT, log);
                SetWithdrawalWaitPeriodEventResponse typedResponse = new SetWithdrawalWaitPeriodEventResponse();
                typedResponse.log = log;
                typedResponse._waitPeriodInSeconds = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SetWithdrawalWaitPeriodEventResponse> setWithdrawalWaitPeriodEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SETWITHDRAWALWAITPERIOD_EVENT));
        return setWithdrawalWaitPeriodEventFlowable(filter);
    }

    public List<UnpausedEventResponse> getUnpausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSED_EVENT, transactionReceipt);
        ArrayList<UnpausedEventResponse> responses = new ArrayList<UnpausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UnpausedEventResponse typedResponse = new UnpausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnpausedEventResponse>() {
            @Override
            public UnpausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSED_EVENT, log);
                UnpausedEventResponse typedResponse = new UnpausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public List<WithdrawalRequestedEventResponse> getWithdrawalRequestedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(WITHDRAWALREQUESTED_EVENT, transactionReceipt);
        ArrayList<WithdrawalRequestedEventResponse> responses = new ArrayList<WithdrawalRequestedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            WithdrawalRequestedEventResponse typedResponse = new WithdrawalRequestedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<WithdrawalRequestedEventResponse> withdrawalRequestedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, WithdrawalRequestedEventResponse>() {
            @Override
            public WithdrawalRequestedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(WITHDRAWALREQUESTED_EVENT, log);
                WithdrawalRequestedEventResponse typedResponse = new WithdrawalRequestedEventResponse();
                typedResponse.log = log;
                typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<WithdrawalRequestedEventResponse> withdrawalRequestedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(WITHDRAWALREQUESTED_EVENT));
        return withdrawalRequestedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deposit(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_deposit(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> erc20AddressMapping(String param0, BigInteger param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ERC20ADDRESSMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_erc20AddressMapping(String param0, BigInteger param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ERC20ADDRESSMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> erc20Supported(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ERC20SUPPORTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_erc20Supported(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ERC20SUPPORTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeWithdrawal(String _erc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeWithdrawal(String _erc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> requestWithdrawal(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_requestWithdrawal(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setErc20Mapping(String _thisBcErc20, BigInteger _otherBcId, String _otherBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETERC20MAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setErc20Mapping(String _thisBcErc20, BigInteger _otherBcId, String _otherBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETERC20MAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setWithdrawalWaitPeriod(BigInteger _withdrawalWaitPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setWithdrawalWaitPeriod(BigInteger _withdrawalWaitPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class TxInfo extends StaticStruct {
        public BigInteger crosschainTxId;

        public BigInteger sourceBcId;

        public String sourceErc20Address;

        public BigInteger targetBcId;

        public String targetErc20Address;

        public String sender;

        public String recipient;

        public String liquidityProvider;

        public BigInteger amount;

        public BigInteger lpFee;

        public BigInteger inFee;

        public BigInteger biddingPeriodEnd;

        public BigInteger timeout;

        public TxInfo(BigInteger crosschainTxId, BigInteger sourceBcId, String sourceErc20Address, BigInteger targetBcId, String targetErc20Address, String sender, String recipient, String liquidityProvider, BigInteger amount, BigInteger lpFee, BigInteger inFee, BigInteger biddingPeriodEnd, BigInteger timeout) {
            super(new org.web3j.abi.datatypes.generated.Uint256(crosschainTxId),new org.web3j.abi.datatypes.generated.Uint256(sourceBcId),new org.web3j.abi.datatypes.Address(sourceErc20Address),new org.web3j.abi.datatypes.generated.Uint256(targetBcId),new org.web3j.abi.datatypes.Address(targetErc20Address),new org.web3j.abi.datatypes.Address(sender),new org.web3j.abi.datatypes.Address(recipient),new org.web3j.abi.datatypes.Address(liquidityProvider),new org.web3j.abi.datatypes.generated.Uint256(amount),new org.web3j.abi.datatypes.generated.Uint256(lpFee),new org.web3j.abi.datatypes.generated.Uint256(inFee),new org.web3j.abi.datatypes.generated.Uint256(biddingPeriodEnd),new org.web3j.abi.datatypes.generated.Uint256(timeout));
            this.crosschainTxId = crosschainTxId;
            this.sourceBcId = sourceBcId;
            this.sourceErc20Address = sourceErc20Address;
            this.targetBcId = targetBcId;
            this.targetErc20Address = targetErc20Address;
            this.sender = sender;
            this.recipient = recipient;
            this.liquidityProvider = liquidityProvider;
            this.amount = amount;
            this.lpFee = lpFee;
            this.inFee = inFee;
            this.biddingPeriodEnd = biddingPeriodEnd;
            this.timeout = timeout;
        }

        public TxInfo(Uint256 crosschainTxId, Uint256 sourceBcId, Address sourceErc20Address, Uint256 targetBcId, Address targetErc20Address, Address sender, Address recipient, Address liquidityProvider, Uint256 amount, Uint256 lpFee, Uint256 inFee, Uint256 biddingPeriodEnd, Uint256 timeout) {
            super(crosschainTxId,sourceBcId,sourceErc20Address,targetBcId,targetErc20Address,sender,recipient,liquidityProvider,amount,lpFee,inFee,biddingPeriodEnd,timeout);
            this.crosschainTxId = crosschainTxId.getValue();
            this.sourceBcId = sourceBcId.getValue();
            this.sourceErc20Address = sourceErc20Address.getValue();
            this.targetBcId = targetBcId.getValue();
            this.targetErc20Address = targetErc20Address.getValue();
            this.sender = sender.getValue();
            this.recipient = recipient.getValue();
            this.liquidityProvider = liquidityProvider.getValue();
            this.amount = amount.getValue();
            this.lpFee = lpFee.getValue();
            this.inFee = inFee.getValue();
            this.biddingPeriodEnd = biddingPeriodEnd.getValue();
            this.timeout = timeout.getValue();
        }
    }

    public static class BannedEventResponse extends BaseEventResponse {
        public String _user;

        public Boolean _banned;
    }

    public static class DepositedEventResponse extends BaseEventResponse {
        public String _lp;

        public String _erc20;

        public BigInteger _amount;
    }

    public static class ERC20AddressMappingChangedEventResponse extends BaseEventResponse {
        public String _thisBcTokenContract;

        public BigInteger _otherBcId;

        public String _othercTokenContract;
    }

    public static class FinalizeOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class FinalizeOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class FinalizeWithdrawalEventResponse extends BaseEventResponse {
        public String _lp;

        public String _erc20;

        public BigInteger _amount;
    }

    public static class FrozenEventResponse extends BaseEventResponse {
        public String _user;

        public Boolean _frozen;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class PausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class PrepareOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;

        public Boolean _success;

        public BigInteger _failureReason;

        public String _msg;
    }

    public static class PrepareOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class SetInfrastructureAccountEventResponse extends BaseEventResponse {
        public String _account;
    }

    public static class SetWithdrawalWaitPeriodEventResponse extends BaseEventResponse {
        public BigInteger _waitPeriodInSeconds;
    }

    public static class UnpausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class WithdrawalRequestedEventResponse extends BaseEventResponse {
        public String _lp;

        public String _erc20;

        public BigInteger _amount;
    }
}
