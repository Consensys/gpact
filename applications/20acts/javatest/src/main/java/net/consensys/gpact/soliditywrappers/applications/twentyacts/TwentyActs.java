package net.consensys.gpact.soliditywrappers.applications.twentyacts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.7-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class TwentyActs extends Contract {
    public static final String BINARY = "60806040523480156200001157600080fd5b506040516200376d3803806200376d8339810160408190526200003491620001ad565b6000805460ff19168155600280546001600160a01b03191633908117909155604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350336200008e60008262000115565b620000ba7f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd58262000115565b620000e67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8262000115565b50600592909255601055601180546001600160a01b0319166001600160a01b03909216919091179055620001f5565b62000121828262000125565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001215760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600080600060608486031215620001c357600080fd5b83516020850151604086015191945092506001600160a01b0381168114620001ea57600080fd5b809150509250925092565b61356880620002056000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c806388c9bcce11610146578063b0d94a97116100c3578063d42a85e211610087578063d42a85e2146105d4578063d547741f14610608578063da95ebf71461061b578063e63ab1e91461062e578063ee2eefa214610655578063f2fde38b1461066857600080fd5b8063b0d94a9714610535578063b283209614610548578063b76722ed1461055b578063cd47bde114610586578063d0516650146105b157600080fd5b806391d148541161010a57806391d14854146104db57806393cedc14146104ee5780639c8d83bb146104f7578063a217fddf1461051a578063ac869cd81461052257600080fd5b806388c9bcce146104565780638da5cb5b146104695780638f601f661461047a5780639017f79e146104a5578063917af2d7146104c857600080fd5b8063439160df116101df5780635e7616fb116101a35780635e7616fb146103e25780636056a52a146103f557806363ea34dc14610408578063715018a61461041b5780638104d375146104235780638456cb591461044e57600080fd5b8063439160df1461038157806343a122241461038a57806347e7ef24146103b15780634abf24cb146103c45780635c975abb146103d757600080fd5b80632b302cbd116102265780632b302cbd146103085780632f2ff15d14610333578063327c810e1461034657806336568abe146103665780633f4ba83a1461037957600080fd5b806301ffc9a7146102635780630715ffb81461028b57806313bd55ae146102a057806319836dc7146102c3578063248a9ca3146102d6575b600080fd5b610276610271366004612b1a565b61067b565b60405190151581526020015b60405180910390f35b61029e610299366004612b60565b6106b2565b005b6102766102ae366004612b7b565b60076020526000908152604090205460ff1681565b61029e6102d1366004612b94565b610704565b6102fa6102e4366004612b7b565b6000908152600160208190526040909120015490565b604051908152602001610282565b6102fa610316366004612bc0565b600d60209081526000928352604080842090915290825290205481565b61029e610341366004612b94565b61075c565b6102fa610354366004612b7b565b60066020526000908152604090205481565b61029e610374366004612b94565b6107ec565b61029e610866565b6102fa60055481565b6102fa7f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd581565b61029e6103bf366004612bea565b6108e6565b61029e6103d2366004612b60565b610aa3565b60005460ff16610276565b61029e6103f0366004612c76565b610d5b565b61029e610403366004612cfb565b6110ca565b61029e610416366004612d37565b6111ce565b61029e6116be565b601154610436906001600160a01b031681565b6040516001600160a01b039091168152602001610282565b61029e611732565b61029e610464366004612d65565b6117b0565b6002546001600160a01b0316610436565b6102fa610488366004612bc0565b600c60209081526000928352604080842090915290825290205481565b6102766104b3366004612b60565b60096020526000908152604090205460ff1681565b61029e6104d6366004612b7b565b611802565b6102766104e9366004612b94565b61182e565b6102fa60105481565b610276610505366004612b60565b600a6020526000908152604090205460ff1681565b6102fa600081565b61029e610530366004612d65565b611859565b61029e610543366004612c76565b6118ab565b61029e610556366004612b94565b611bb9565b6102fa610569366004612bc0565b600f60209081526000928352604080842090915290825290205481565b6102fa610594366004612bc0565b600e60209081526000928352604080842090915290825290205481565b6102766105bf366004612b60565b600b6020526000908152604090205460ff1681565b6104366105e2366004612bea565b60086020908152600092835260408084209091529082529020546001600160a01b031681565b61029e610616366004612b94565b611cac565b61029e610629366004612bea565b611d2d565b6102fa7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61029e610663366004612d9c565b611e8e565b61029e610676366004612b60565b612514565b60006001600160e01b03198216637965db0b60e01b14806106ac57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6106bd60003361182e565b6106e25760405162461bcd60e51b81526004016106d990612e4c565b60405180910390fd5b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b0316331461072e5760405162461bcd60e51b81526004016106d990612e83565b60009182526004602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6000828152600160208190526040909120015461077a905b3361182e565b6107de5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b60648201526084016106d9565b6107e882826125ff565b5050565b6001600160a01b038116331461085c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106d9565b6107e8828261266a565b6108907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361182e565b6108dc5760405162461bcd60e51b815260206004820152601c60248201527f3230414354533a4d75737420686176652050415553455220726f6c650000000060448201526064016106d9565b6108e46126d1565b565b6001600160a01b03821660009081526009602052604090205460ff166109665760405162461bcd60e51b815260206004820152602f60248201527f3230414354533a4465706f73697473206e6f7420616c6c6f77656420666f722060448201526e115490c80c8c0818dbdb9d1c9858dd608a1b60648201526084016106d9565b336000908152600a602052604090205460ff16156109dd5760405162461bcd60e51b815260206004820152602e60248201527f3230414354533a4163636f756e742069732062616e6e65642066726f6d20646560448201526d706f736974696e672066756e647360901b60648201526084016106d9565b336000908152600c602090815260408083206001600160a01b038616845290915281208054839290610a10908490612ece565b90915550506040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd90606401602060405180830381600087803b158015610a6557600080fd5b505af1158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190612ee6565b50505050565b336000908152600f602090815260408083206001600160a01b0385168452909152902054610b135760405162461bcd60e51b815260206004820152601b60248201527f3230414354533a4e6f20616374697665207769746864726177616c000000000060448201526064016106d9565b336000908152600f602090815260408083206001600160a01b03851684529091529020544210610b915760405162461bcd60e51b815260206004820152602360248201527f3230414354533a417474656d7074696e6720746f207769746864726177206561604482015262726c7960e81b60648201526084016106d9565b336000908152600b602052604090205460ff1615610be95760405162461bcd60e51b8152602060048201526015602482015274191820a1aa299d20b1b1b7bab73a10333937bd32b760591b60448201526064016106d9565b336000818152600c602090815260408083206001600160a01b03861680855290835281842054948452600e8352818420908452909152902054808211610c855760405162461bcd60e51b815260206004820152602b60248201527f3230414354533a5769746864726177616c20616d6f756e74203e206465706f7360448201526a1a5d195908185b5bdd5b9d60aa1b60648201526084016106d9565b336000908152600e602090815260408083206001600160a01b0387168452909152812055610cb38183612f03565b336000818152600c602090815260408083206001600160a01b038916808552925291829020939093555163a9059cbb60e01b815260048101919091526024810183905284919063a9059cbb90604401602060405180830381600087803b158015610d1c57600080fd5b505af1158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d549190612ee6565b5050505050565b600085604051602001610d6e9190612f1a565b60408051601f19818403018152918152815160209283012060008181526006909352912054909150600114610db55760405162461bcd60e51b81526004016106d990612ff7565b600554866020013514610dda5760405162461bcd60e51b81526004016106d990613039565b60608601356000818152600460205260409020546001600160a01b031690610e2790827ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb889898989612764565b6000610e3586880188612b7b565b9050808314610e985760405162461bcd60e51b815260206004820152602960248201527f3230414354533a496e636f72726563742046696e616c697a65206f6e2054617260448201526819d95d08195d995b9d60ba1b60648201526084016106d9565b6000610140890135610eb46101208b01356101008c0135612ece565b610ebe9190612ece565b90506000610ed260608b0160408c01612b60565b905081600d6000610ee960c08e0160a08f01612b60565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f3b9190612f03565b90915550829050600c6000610f5660c08e0160a08f01612b60565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254610fa89190612f03565b90915550610fc290506101208b01356101008c0135612ece565b600c6000610fd76101008e0160e08f01612b60565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008282546110299190612ece565b90915550506011546001600160a01b039081166000908152600c60209081526040808320938516835292905290812080546101408d0135929061106d908490612ece565b90915550506000858152600660205260409081902060039055517fa1775c1feb2a037de55a5c0f4bea4b713d77fb67da2490e8440d85202f9de8ba906110b69087815260200190565b60405180910390a150505050505050505050565b6110f47f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd53361182e565b6111405760405162461bcd60e51b815260206004820152601d60248201527f3230414354533a4d7573742068617665204d415050494e4720726f6c6500000060448201526064016106d9565b6001600160a01b038381166000818152600960209081526040808320805460ff191660011790556008825280832087845282529182902080549486166001600160a01b031990951685179055815192835282018590528101919091527f50b50bfc85bd27d4d10729da017c95d43e415ff0b7ff52e4b4733e5e77b7ee039060600160405180910390a1505050565b6000816040516020016111e19190612f1a565b60408051601f19818403018152918152815160209283012060008181526006909352912054909150156112265760405162461bcd60e51b81526004016106d990613070565b6020808301356000908152600490915260409020546001600160a01b0316806112b75760405162461bcd60e51b815260206004820152603760248201527f3230414354533a536f7572636520626c6f636b636861696e206e6f742073757060448201527f706f72746564206279207461726765742032304143545300000000000000000060648201526084016106d9565b60006112c960a0850160808601612b60565b905060006008816112e060a0880160808901612b60565b6001600160a01b03908116825260208083019390935260409182016000908120898501358252909352918190205490911691506113239060608701908701612b60565b6001600160a01b0316816001600160a01b03161461139c5760405162461bcd60e51b815260206004820152603060248201527f3230414354533a546f6b656e206e6f74207472616e7366657261626c6520746f60448201526f0207265717565737465642045524332360841b60648201526084016106d9565b6005548560600135146113c15760405162461bcd60e51b81526004016106d990613039565b6113d2610100860160e08701612b60565b6001600160a01b0316336001600160a01b0316146114475760405162461bcd60e51b815260206004820152602c60248201527f3230414354533a6d73672e73656e646572206d757374206265206c697175696460448201526b34ba3c90383937bb34b232b960a11b60648201526084016106d9565b336000818152600c602090815260408083206001600160a01b03871680855290835281842054858552600d8452828520828652845282852054958552600e8452828520918552925290912054610100880135929083816114a78486612f03565b6114b19190612f03565b10156114cf5760405162461bcd60e51b81526004016106d9906130b5565b42896101600135106114f35760405162461bcd60e51b81526004016106d9906130ff565b42896101800135116115475760405162461bcd60e51b815260206004820181905260248201527f3230414354533a5472616e73616374696f6e206861732074696d6564206f757460448201526064016106d9565b600a600061155b60c08c0160a08d01612b60565b6001600160a01b0316815260208101919091526040016000205460ff16156115c55760405162461bcd60e51b815260206004820152601760248201527f3230414354533a53656e6465722069732062616e6e656400000000000000000060448201526064016106d9565b600a60006115d960e08c0160c08d01612b60565b6001600160a01b0316815260208101919091526040016000205460ff16156116435760405162461bcd60e51b815260206004820152601a60248201527f3230414354533a526563697069656e742069732062616e6e656400000000000060448201526064016106d9565b61164d8483612ece565b336000908152600d602090815260408083206001600160a01b038b1684528252808320939093558a825260068152908290206001905590518981527febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b910160405180910390a1505050505050505050565b6002546001600160a01b031633146116e85760405162461bcd60e51b81526004016106d990612e83565b6002546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280546001600160a01b0319169055565b61175c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361182e565b6117a85760405162461bcd60e51b815260206004820152601c60248201527f3230414354533a4d75737420686176652050415553455220726f6c650000000060448201526064016106d9565b6108e46128e8565b6117bb60003361182e565b6117d75760405162461bcd60e51b81526004016106d990612e4c565b6001600160a01b03919091166000908152600a60205260409020805460ff1916911515919091179055565b61180d60003361182e565b6118295760405162461bcd60e51b81526004016106d990612e4c565b601055565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61186460003361182e565b6118805760405162461bcd60e51b81526004016106d990612e4c565b6001600160a01b03919091166000908152600b60205260409020805460ff1916911515919091179055565b6000856040516020016118be9190612f1a565b60408051601f198184030181529181528151602092830120600081815260069093529120549091506001146119055760405162461bcd60e51b81526004016106d990612ff7565b60055486606001351461192a5760405162461bcd60e51b81526004016106d990613039565b602080870135600081815260049092526040909120546001600160a01b031690611967908260008051602061351383398151915289898989612764565b600080611976878901896131b5565b509193509150508382146119f25760405162461bcd60e51b815260206004820152603d60248201527f3230414354533a2046696e616c697a65204f6e205461726765743a20496e636f60448201527f72726563742050726570617265204f6e20536f75726365206576656e7400000060648201526084016106d9565b6000611a056101008b0160e08c01612b60565b90506000611a1960a08c0160808d01612b60565b6001600160a01b038084166000908152600d60209081526040808320938516835292905290812080549293506101008e013592909190611a5a908490612f03565b90915550508215611b66576000868152600660209081526040808320600390556001600160a01b038086168452600c83528184209085168452909152812080546101008e01359290611aad908490612f03565b925050819055506000819050806001600160a01b031663a9059cbb8d60c0016020810190611adb9190612b60565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526101008f01356024820152604401602060405180830381600087803b158015611b2757600080fd5b505af1158015611b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5f9190612ee6565b5050611b79565b6000868152600660205260409020600290555b6040518681527ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb89060200160405180910390a15050505050505050505050565b6002546001600160a01b03163314611be35760405162461bcd60e51b81526004016106d990612e83565b81611c285760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908189b1bd8dad8da185a5b881a59605a1b60448201526064016106d9565b6001600160a01b038116611c7e5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642076657269666965722061646472657373000000000000000060448201526064016106d9565b60009182526003602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b60008281526001602081905260409091200154611cc890610774565b61085c5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b60648201526084016106d9565b336000908152600f602090815260408083206001600160a01b038616845290915290205415611d9e5760405162461bcd60e51b815260206004820152601860248201527f3230414354533a416374697665207769746864726177616c000000000000000060448201526064016106d9565b336000818152600c602090815260408083206001600160a01b03871680855290835281842054858552600d8452828520828652845282852054958552600e84528285209185529252909120549091908381611df98486612f03565b611e039190612f03565b1115611e215760405162461bcd60e51b81526004016106d9906130b5565b611e2b8482612ece565b336000908152600e602090815260408083206001600160a01b038a168452909152902055601054611e5d904290612ece565b336000908152600f602090815260408083206001600160a01b03999099168352979052959095209490945550505050565b600087604051602001611ea19190612f1a565b60408051601f1981840301815291815281516020928301206000818152600690935291205490915015611ee65760405162461bcd60e51b81526004016106d990613070565b600554886020013514611f0b5760405162461bcd60e51b81526004016106d990613039565b4288610160013510611f2f5760405162461bcd60e51b81526004016106d9906130ff565b60608801356000908152600460205260409020546001600160a01b031680611fa5576040805183815260006020820181905260018284015260806060830181905282015290516000805160206135138339815191529181900360a00190a15060009081526006602052604090206002905561250b565b611fd88960600135827febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b8b8b8b8b612764565b6000611fe6888a018a612b7b565b90508083146120485760405162461bcd60e51b815260206004820152602860248201527f3230414354533a496e636f72726563742050726570617265204f6e2054617267604482015267195d08195d995b9d60c21b60648201526084016106d9565b50600061205b60608b0160408c01612b60565b9050600060086000836001600160a01b03166001600160a01b0316815260200190815260200160002060008c60600135815260200190815260200160002060009054906101000a90046001600160a01b031690508a60800160208101906120c29190612b60565b6001600160a01b0316816001600160a01b031614612130576040805185815260006020820181905260028284015260806060830181905282015290516000805160206135138339815191529181900360a00190a150505060009081526006602052604090206002905561250b565b50428a6101800135101561219b57604080518481526000602082018190526003928201929092526080606082018190528101919091526000805160206135138339815191529060a0015b60405180910390a1505060009081526006602052604090206002905561250b565b600a60006121af60c08d0160a08e01612b60565b6001600160a01b0316815260208101919091526040016000205460ff161561221157604080518481526000602082018190526005928201929092526080606082018190528101919091526000805160206135138339815191529060a00161217a565b600a600061222560e08d0160c08e01612b60565b6001600160a01b0316815260208101919091526040016000205460ff161561228757604080518481526000602082018190526006928201929092526080606082018190528101919091526000805160206135138339815191529060a00161217a565b60006101408b01356122a36101208d01356101008e0135612ece565b6122ad9190612ece565b9050600080836001600160a01b03166323b872dd60e01b8e60a00160208101906122d79190612b60565b6040516001600160a01b0390911660248201523060448201526064810186905260840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516123389190613287565b6000604051808303816000865af19150503d8060008114612375576040519150601f19603f3d011682016040523d82523d6000602084013e61237a565b606091505b5091509150816123d55760008051602061351383398151915286600060046123a185612963565b6040516123b194939291906132cf565b60405180910390a1505050600092835250506006602052604090206002905561250b565b82600c60008f60a00160208101906123ed9190612b60565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866001600160a01b03166001600160a01b03168152602001908152602001600020600082825461243f9190612ece565b9250508190555082600d60008f60a001602081019061245e9190612b60565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866001600160a01b03166001600160a01b0316815260200190815260200160002060008282546124b09190612ece565b9091555050600086815260066020908152604080832060019081905581518a81529283015281018290526080606082018190528101919091526000805160206135138339815191529060a00160405180910390a15050505050505b50505050505050565b6002546001600160a01b0316331461253e5760405162461bcd60e51b81526004016106d990612e83565b6001600160a01b0381166125a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d9565b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b612609828261182e565b6107e85760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b612674828261182e565b156107e85760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60005460ff1661271a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106d9565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000878152600360205260409020546001600160a01b0316806127d75760405162461bcd60e51b815260206004820152602560248201527f4e6f207265676973746572656420766572696669657220666f7220626c6f636b60448201526431b430b4b760d91b60648201526084016106d9565b6000888152600460205260409020546001600160a01b0388811691161461284e5760405162461bcd60e51b815260206004820152602560248201527f44617461206e6f7420656d697474656420627920617070726f76656420636f6e6044820152641d1c9858dd60da1b60648201526084016106d9565b60008888888888604051602001612869959493929190613300565b60408051601f198184030181529082905263260e748160e11b825291506001600160a01b03831690634c1ce902906128ad908c908b9086908a908a9060040161333a565b60006040518083038186803b1580156128c557600080fd5b505afa1580156128d9573d6000803e3d6000fd5b50505050505050505050505050565b60005460ff161561292e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106d9565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586127473390565b606060248251101561299f576129798251612a14565b604051602001612989919061338e565b6040516020818303038152906040529050919050565b815160049092019160441180156129f9576000838060200190518101906129c691906133e4565b90506129d181612a14565b6040516020016129e191906133fd565b60405160208183030381529060405292505050919050565b82806020019051810190612a0d919061342c565b9392505050565b606081612a385750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612a625780612a4c816134a3565b9150612a5b9050600a836134d4565b9150612a3c565b60008167ffffffffffffffff811115612a7d57612a7d613146565b6040519080825280601f01601f191660200182016040528015612aa7576020820181803683370190505b5090505b8415612b1257612abc600183612f03565b9150612ac9600a866134e8565b612ad4906030612ece565b60f81b818381518110612ae957612ae96134fc565b60200101906001600160f81b031916908160001a905350612b0b600a866134d4565b9450612aab565b949350505050565b600060208284031215612b2c57600080fd5b81356001600160e01b031981168114612a0d57600080fd5b80356001600160a01b0381168114612b5b57600080fd5b919050565b600060208284031215612b7257600080fd5b612a0d82612b44565b600060208284031215612b8d57600080fd5b5035919050565b60008060408385031215612ba757600080fd5b82359150612bb760208401612b44565b90509250929050565b60008060408385031215612bd357600080fd5b612bdc83612b44565b9150612bb760208401612b44565b60008060408385031215612bfd57600080fd5b612c0683612b44565b946020939093013593505050565b60006101a08284031215612c2757600080fd5b50919050565b60008083601f840112612c3f57600080fd5b50813567ffffffffffffffff811115612c5757600080fd5b602083019150836020828501011115612c6f57600080fd5b9250929050565b60008060008060006101e08688031215612c8f57600080fd5b612c998787612c14565b94506101a086013567ffffffffffffffff80821115612cb757600080fd5b612cc389838a01612c2d565b90965094506101c0880135915080821115612cdd57600080fd5b50612cea88828901612c2d565b969995985093965092949392505050565b600080600060608486031215612d1057600080fd5b612d1984612b44565b925060208401359150612d2e60408501612b44565b90509250925092565b60006101a08284031215612d4a57600080fd5b612a0d8383612c14565b8015158114612d6257600080fd5b50565b60008060408385031215612d7857600080fd5b612d8183612b44565b91506020830135612d9181612d54565b809150509250929050565b6000806000806000806000610200888a031215612db857600080fd5b612dc28989612c14565b96506101a088013567ffffffffffffffff80821115612de057600080fd5b612dec8b838c01612c2d565b90985096506101c08a0135915080821115612e0657600080fd5b612e128b838c01612c2d565b90965094506101e08a0135915080821115612e2c57600080fd5b50612e398a828b01612c2d565b989b979a50959850939692959293505050565b6020808252601b908201527f3230414354533a4d75737420686176652041444d494e20726f6c650000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612ee157612ee1612eb8565b500190565b600060208284031215612ef857600080fd5b8151612a0d81612d54565b600082821015612f1557612f15612eb8565b500390565b81358152602080830135908201526101a08101612f3960408401612b44565b6001600160a01b0316604083015260608381013590830152612f5d60808401612b44565b6001600160a01b03166080830152612f7760a08401612b44565b6001600160a01b031660a0830152612f9160c08401612b44565b6001600160a01b031660c0830152612fab60e08401612b44565b6001600160a01b031660e0830152610100838101359083015261012080840135908301526101408084013590830152610160808401359083015261018092830135929091019190915290565b60208082526022908201527f3230414354533a5472616e73616374696f6e206e6f7420696e2070726f677265604082015261737360f01b606082015260800190565b6020808252601e908201527f3230414354533a4e6f7420666f72207468697320626c6f636b636861696e0000604082015260600190565b60208082526025908201527f3230414354533a5472616e73616374696f6e20616c72656164792072656769736040820152641d195c995960da1b606082015260800190565b6020808252602a908201527f3230414354533a416d6f756e74206578636565647320756e616c6c6f6361746560408201526964206465706f7369747360b01b606082015260800190565b60208082526027908201527f3230414354533a42696464696e6720706572696f64207374696c6c20696e2070604082015266726f677265737360c81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561318557613185613146565b604052919050565b600067ffffffffffffffff8211156131a7576131a7613146565b50601f01601f191660200190565b600080600080608085870312156131cb57600080fd5b8435935060208501356131dd81612d54565b925060408501359150606085013567ffffffffffffffff81111561320057600080fd5b8501601f8101871361321157600080fd5b803561322461321f8261318d565b61315c565b81815288602083850101111561323957600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60005b8381101561327657818101518382015260200161325e565b83811115610a9d5750506000910152565b6000825161329981846020870161325b565b9190910192915050565b600081518084526132bb81602086016020860161325b565b601f01601f19169290920160200192915050565b84815283151560208201528260408201526080606082015260006132f660808301846132a3565b9695505050505050565b8581526bffffffffffffffffffffffff198560601b1660208201528360348201528183605483013760009101605401908152949350505050565b85815284602082015260806040820152600061335960808301866132a3565b8281036060840152838152838560208301376000602085830101526020601f19601f8601168201019150509695505050505050565b7f52657665727420666f7220756e6b6e6f776e206572726f722e204572726f722081526703632b733ba341d160c51b6020820152600082516133d781602885016020870161325b565b9190910160280192915050565b6000602082840312156133f657600080fd5b5051919050565b6602830b734b19d160cd1b81526000825161341f81600785016020870161325b565b9190910160070192915050565b60006020828403121561343e57600080fd5b815167ffffffffffffffff81111561345557600080fd5b8201601f8101841361346657600080fd5b805161347461321f8261318d565b81815285602083850101111561348957600080fd5b61349a82602083016020860161325b565b95945050505050565b60006000198214156134b7576134b7612eb8565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826134e3576134e36134be565b500490565b6000826134f7576134f76134be565b500690565b634e487b7160e01b600052603260045260246000fdfe915add4368b699f4256098461a22d41dad802a0938602d4ae1d5e5e7133a908ca26469706673582212202e5b576ed580e1b61bfce2e30f310aa91d7ae0cac0606c49f5a237ee406c692264736f6c63430008090033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_MAPPING_ROLE = "MAPPING_ROLE";

    public static final String FUNC_PAUSER_ROLE = "PAUSER_ROLE";

    public static final String FUNC_ADDREMOTECROSSCHAINCONTROL = "addRemoteCrosschainControl";

    public static final String FUNC_ADDVERIFIER = "addVerifier";

    public static final String FUNC_ALLOCATED = "allocated";

    public static final String FUNC_BANNED = "banned";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_DEPOSITS = "deposits";

    public static final String FUNC_ERC20ADDRESSMAPPING = "erc20AddressMapping";

    public static final String FUNC_ERC20SUPPORTED = "erc20Supported";

    public static final String FUNC_FINALIZEONSOURCE = "finalizeOnSource";

    public static final String FUNC_FINALIZEONTARGET = "finalizeOnTarget";

    public static final String FUNC_FINALIZEWITHDRAWAL = "finalizeWithdrawal";

    public static final String FUNC_FROZEN = "frozen";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_INFRASTRUCTUREACCOUNT = "infrastructureAccount";

    public static final String FUNC_MYBLOCKCHAINID = "myBlockchainId";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_PREPAREONSOURCE = "prepareOnSource";

    public static final String FUNC_PREPAREONTARGET = "prepareOnTarget";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REQUESTWITHDRAWAL = "requestWithdrawal";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETBANNED = "setBanned";

    public static final String FUNC_SETERC20MAPPING = "setErc20Mapping";

    public static final String FUNC_SETFROZEN = "setFrozen";

    public static final String FUNC_SETINFRASTRUCTUREACCOUNT = "setInfrastructureAccount";

    public static final String FUNC_SETWITHDRAWALWAITPERIOD = "setWithdrawalWaitPeriod";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_TXCOMPLETE = "txComplete";

    public static final String FUNC_TXSTATE = "txState";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_WITHDRAWALWAITPERIOD = "withdrawalWaitPeriod";

    public static final String FUNC_WITHDRAWALS = "withdrawals";

    public static final String FUNC_WITHDRAWALSTIME = "withdrawalsTime";

    public static final Event ERC20ADDRESSMAPPINGCHANGED_EVENT = new Event("ERC20AddressMappingChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event FINALIZEONSOURCE_EVENT = new Event("FinalizeOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event FINALIZEONTARGET_EVENT = new Event("FinalizeOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PAUSED_EVENT = new Event("Paused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event PREPAREONSOURCE_EVENT = new Event("PrepareOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event PREPAREONTARGET_EVENT = new Event("PrepareOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ERC20AddressMappingChangedEventResponse> getERC20AddressMappingChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ERC20ADDRESSMAPPINGCHANGED_EVENT, transactionReceipt);
        ArrayList<ERC20AddressMappingChangedEventResponse> responses = new ArrayList<ERC20AddressMappingChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ERC20AddressMappingChangedEventResponse typedResponse = new ERC20AddressMappingChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._thisBcTokenContract = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._otherBcId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._othercTokenContract = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ERC20AddressMappingChangedEventResponse> eRC20AddressMappingChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ERC20AddressMappingChangedEventResponse>() {
            @Override
            public ERC20AddressMappingChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ERC20ADDRESSMAPPINGCHANGED_EVENT, log);
                ERC20AddressMappingChangedEventResponse typedResponse = new ERC20AddressMappingChangedEventResponse();
                typedResponse.log = log;
                typedResponse._thisBcTokenContract = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._otherBcId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._othercTokenContract = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ERC20AddressMappingChangedEventResponse> eRC20AddressMappingChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ERC20ADDRESSMAPPINGCHANGED_EVENT));
        return eRC20AddressMappingChangedEventFlowable(filter);
    }

    public List<FinalizeOnSourceEventResponse> getFinalizeOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, transactionReceipt);
        ArrayList<FinalizeOnSourceEventResponse> responses = new ArrayList<FinalizeOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnSourceEventResponse>() {
            @Override
            public FinalizeOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, log);
                FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONSOURCE_EVENT));
        return finalizeOnSourceEventFlowable(filter);
    }

    public List<FinalizeOnTargetEventResponse> getFinalizeOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, transactionReceipt);
        ArrayList<FinalizeOnTargetEventResponse> responses = new ArrayList<FinalizeOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnTargetEventResponse>() {
            @Override
            public FinalizeOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, log);
                FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONTARGET_EVENT));
        return finalizeOnTargetEventFlowable(filter);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<PausedEventResponse> getPausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSED_EVENT, transactionReceipt);
        ArrayList<PausedEventResponse> responses = new ArrayList<PausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PausedEventResponse typedResponse = new PausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PausedEventResponse>() {
            @Override
            public PausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSED_EVENT, log);
                PausedEventResponse typedResponse = new PausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public List<PrepareOnSourceEventResponse> getPrepareOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, transactionReceipt);
        ArrayList<PrepareOnSourceEventResponse> responses = new ArrayList<PrepareOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnSourceEventResponse>() {
            @Override
            public PrepareOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, log);
                PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONSOURCE_EVENT));
        return prepareOnSourceEventFlowable(filter);
    }

    public List<PrepareOnTargetEventResponse> getPrepareOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONTARGET_EVENT, transactionReceipt);
        ArrayList<PrepareOnTargetEventResponse> responses = new ArrayList<PrepareOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnTargetEventResponse>() {
            @Override
            public PrepareOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONTARGET_EVENT, log);
                PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONTARGET_EVENT));
        return prepareOnTargetEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<UnpausedEventResponse> getUnpausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSED_EVENT, transactionReceipt);
        ArrayList<UnpausedEventResponse> responses = new ArrayList<UnpausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UnpausedEventResponse typedResponse = new UnpausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnpausedEventResponse>() {
            @Override
            public UnpausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSED_EVENT, log);
                UnpausedEventResponse typedResponse = new UnpausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deposit(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_deposit(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> erc20AddressMapping(String param0, BigInteger param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ERC20ADDRESSMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_erc20AddressMapping(String param0, BigInteger param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ERC20ADDRESSMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> erc20Supported(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ERC20SUPPORTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_erc20Supported(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ERC20SUPPORTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeWithdrawal(String _thisBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeWithdrawal(String _thisBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> requestWithdrawal(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_requestWithdrawal(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setErc20Mapping(String _thisBcErc20, BigInteger _otherBcId, String _otherBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETERC20MAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setErc20Mapping(String _thisBcErc20, BigInteger _otherBcId, String _otherBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETERC20MAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setWithdrawalWaitPeriod(BigInteger _withdrawalWaitPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setWithdrawalWaitPeriod(BigInteger _withdrawalWaitPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class TxInfo extends StaticStruct {
        public BigInteger crosschainTxId;

        public BigInteger sourceBcId;

        public String sourceErc20Address;

        public BigInteger targetBcId;

        public String targetErc20Address;

        public String sender;

        public String recipient;

        public String liquidityProvider;

        public BigInteger amount;

        public BigInteger lpFee;

        public BigInteger inFee;

        public BigInteger biddingPeriodEnd;

        public BigInteger timeout;

        public TxInfo(BigInteger crosschainTxId, BigInteger sourceBcId, String sourceErc20Address, BigInteger targetBcId, String targetErc20Address, String sender, String recipient, String liquidityProvider, BigInteger amount, BigInteger lpFee, BigInteger inFee, BigInteger biddingPeriodEnd, BigInteger timeout) {
            super(new org.web3j.abi.datatypes.generated.Uint256(crosschainTxId),new org.web3j.abi.datatypes.generated.Uint256(sourceBcId),new org.web3j.abi.datatypes.Address(sourceErc20Address),new org.web3j.abi.datatypes.generated.Uint256(targetBcId),new org.web3j.abi.datatypes.Address(targetErc20Address),new org.web3j.abi.datatypes.Address(sender),new org.web3j.abi.datatypes.Address(recipient),new org.web3j.abi.datatypes.Address(liquidityProvider),new org.web3j.abi.datatypes.generated.Uint256(amount),new org.web3j.abi.datatypes.generated.Uint256(lpFee),new org.web3j.abi.datatypes.generated.Uint256(inFee),new org.web3j.abi.datatypes.generated.Uint256(biddingPeriodEnd),new org.web3j.abi.datatypes.generated.Uint256(timeout));
            this.crosschainTxId = crosschainTxId;
            this.sourceBcId = sourceBcId;
            this.sourceErc20Address = sourceErc20Address;
            this.targetBcId = targetBcId;
            this.targetErc20Address = targetErc20Address;
            this.sender = sender;
            this.recipient = recipient;
            this.liquidityProvider = liquidityProvider;
            this.amount = amount;
            this.lpFee = lpFee;
            this.inFee = inFee;
            this.biddingPeriodEnd = biddingPeriodEnd;
            this.timeout = timeout;
        }

        public TxInfo(Uint256 crosschainTxId, Uint256 sourceBcId, Address sourceErc20Address, Uint256 targetBcId, Address targetErc20Address, Address sender, Address recipient, Address liquidityProvider, Uint256 amount, Uint256 lpFee, Uint256 inFee, Uint256 biddingPeriodEnd, Uint256 timeout) {
            super(crosschainTxId,sourceBcId,sourceErc20Address,targetBcId,targetErc20Address,sender,recipient,liquidityProvider,amount,lpFee,inFee,biddingPeriodEnd,timeout);
            this.crosschainTxId = crosschainTxId.getValue();
            this.sourceBcId = sourceBcId.getValue();
            this.sourceErc20Address = sourceErc20Address.getValue();
            this.targetBcId = targetBcId.getValue();
            this.targetErc20Address = targetErc20Address.getValue();
            this.sender = sender.getValue();
            this.recipient = recipient.getValue();
            this.liquidityProvider = liquidityProvider.getValue();
            this.amount = amount.getValue();
            this.lpFee = lpFee.getValue();
            this.inFee = inFee.getValue();
            this.biddingPeriodEnd = biddingPeriodEnd.getValue();
            this.timeout = timeout.getValue();
        }
    }

    public static class ERC20AddressMappingChangedEventResponse extends BaseEventResponse {
        public String _thisBcTokenContract;

        public BigInteger _otherBcId;

        public String _othercTokenContract;
    }

    public static class FinalizeOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class FinalizeOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class PausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class PrepareOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;

        public Boolean _success;

        public BigInteger _failureReason;

        public String _msg;
    }

    public static class PrepareOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class UnpausedEventResponse extends BaseEventResponse {
        public String account;
    }
}
