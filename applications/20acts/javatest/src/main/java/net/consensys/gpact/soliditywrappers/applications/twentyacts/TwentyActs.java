package net.consensys.gpact.soliditywrappers.applications.twentyacts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.7-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class TwentyActs extends Contract {
    public static final String BINARY = "60a06040523480156200001157600080fd5b506040516200340c3803806200340c83398101604081905262000034916200016b565b6000805460ff1916815533906200004c9082620000d3565b620000787f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd582620000d3565b620000a47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a82620000d3565b50608092909252600c55600d80546001600160a01b0319166001600160a01b03909216919091179055620001b3565b620000df8282620000e3565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000df5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000806000606084860312156200018157600080fd5b83516020850151604086015191945092506001600160a01b0381168114620001a857600080fd5b809150509250925092565b608051613221620001eb6000396000818161034f01528181610bbc01528181610fd8015281816115e20152611d5f01526132216000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c806388c9bcce11610130578063b0d94a97116100b8578063d547741f1161007c578063d547741f1461055a578063da95ebf71461056d578063dd06016014610580578063e63ab1e914610593578063ee2eefa2146105ba57600080fd5b8063b0d94a97146104bb578063b2832096146104ce578063b76722ed146104e1578063cd47bde11461050c578063d05166501461053757600080fd5b806393cedc14116100ff57806393cedc14146104615780639c8d83bb1461046a578063a217fddf1461048d578063ac869cd814610495578063accb46b2146104a857600080fd5b806388c9bcce146103fd5780638f601f6614610410578063917af2d71461043b57806391d148541461044e57600080fd5b80633f4ba83a116101b35780635c975abb116101825780635c975abb146103995780635e7616fb146103a457806363ea34dc146103b75780638104d375146103ca5780638456cb59146103f557600080fd5b80633f4ba83a14610342578063439160df1461034a57806343a12224146103715780634abf24cb1461038657600080fd5b8063248a9ca3116101fa578063248a9ca31461029f5780632b302cbd146102d15780632f2ff15d146102fc578063327c810e1461030f57806336568abe1461032f57600080fd5b806301ffc9a71461022c5780630715ffb81461025457806313bd55ae1461026957806319836dc71461028c575b600080fd5b61023f61023a3660046127cc565b6105cd565b60405190151581526020015b60405180910390f35b610267610262366004612812565b610604565b005b61023f61027736600461282d565b60056020526000908152604090205460ff1681565b61026761029a366004612846565b610689565b6102c36102ad36600461282d565b6000908152600160208190526040909120015490565b60405190815260200161024b565b6102c36102df366004612872565b600960209081526000928352604080842090915290825290205481565b61026761030a366004612846565b6106eb565b6102c361031d36600461282d565b60046020526000908152604090205481565b61026761033d366004612846565b61077b565b6102676107f5565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b6102c36000805160206131cc83398151915281565b610267610394366004612812565b61086d565b60005460ff1661023f565b6102676103b23660046128fe565b610b60565b6102676103c5366004612983565b610eed565b600d546103dd906001600160a01b031681565b6040516001600160a01b03909116815260200161024b565b610267611329565b61026761040b3660046129b1565b61139f565b6102c361041e366004612872565b600860209081526000928352604080842090915290825290205481565b61026761044936600461282d565b61142a565b61023f61045c366004612846565b611486565b6102c3600c5481565b61023f610478366004612812565b60066020526000908152604090205460ff1681565b6102c3600081565b6102676104a33660046129b1565b6114b1565b6102676104b636600461282d565b611534565b6102676104c93660046128fe565b611586565b6102676104dc366004612846565b6118b2565b6102c36104ef366004612872565b600b60209081526000928352604080842090915290825290205481565b6102c361051a366004612872565b600a60209081526000928352604080842090915290825290205481565b61023f610545366004612812565b60076020526000908152604090205460ff1681565b610267610568366004612846565b6119af565b61026761057b3660046129e8565b611a30565b61026761058e3660046129e8565b611b91565b6102c37f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6102676105c8366004612a12565b611d05565b60006001600160e01b03198216637965db0b60e01b14806105fe57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61060f600033611486565b6106345760405162461bcd60e51b815260040161062b90612ac2565b60405180910390fd5b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527f8595ef221e673f6783c57729d5bfd384816a8988a19fe1b3e1c5379d8efb0857906020015b60405180910390a150565b6106a16000805160206131cc83398151915233611486565b6106bd5760405162461bcd60e51b815260040161062b90612af9565b60009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b60008281526001602081905260409091200154610709905b33611486565b61076d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b606482015260840161062b565b61077782826122b1565b5050565b6001600160a01b03811633146107eb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161062b565b610777828261231c565b61081f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33611486565b6108635760405162461bcd60e51b81526020600482015260156024820152744d75737420686176652050415553455220726f6c6560581b604482015260640161062b565b61086b612383565b565b336000908152600b602090815260408083206001600160a01b03851684529091529020546108dd5760405162461bcd60e51b815260206004820152601b60248201527f3230414354533a4e6f20616374697665207769746864726177616c0000000000604482015260640161062b565b336000908152600b602090815260408083206001600160a01b0385168452909152902054421061095b5760405162461bcd60e51b815260206004820152602360248201527f3230414354533a417474656d7074696e6720746f207769746864726177206561604482015262726c7960e81b606482015260840161062b565b3360009081526007602052604090205460ff16156109b35760405162461bcd60e51b8152602060048201526015602482015274191820a1aa299d20b1b1b7bab73a10333937bd32b760591b604482015260640161062b565b3360008181526008602090815260408083206001600160a01b03861680855290835281842054948452600a8352818420908452909152902054808211610a4f5760405162461bcd60e51b815260206004820152602b60248201527f3230414354533a5769746864726177616c20616d6f756e74203e206465706f7360448201526a1a5d195908185b5bdd5b9d60aa1b606482015260840161062b565b336000908152600a602090815260408083206001600160a01b0387168452909152812055610a7d8183612b3f565b3360008181526008602090815260408083206001600160a01b038916808552925291829020939093555163a9059cbb60e01b815260048101919091526024810183905284919063a9059cbb90604401602060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190612b56565b507fbdbab621b41ebbdfd69d5b112d0fd944ec222aefc6389d5e62a567873f70b614338584604051610b5293929190612b73565b60405180910390a150505050565b600085604051602001610b739190612b97565b60408051601f19818403018152918152815160209283012060008181526004909352912054909150600114610bba5760405162461bcd60e51b815260040161062b90612c74565b7f0000000000000000000000000000000000000000000000000000000000000000866020013514610bfd5760405162461bcd60e51b815260040161062b90612cb6565b60608601356000818152600260205260409020546001600160a01b031690610c4a90827ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb889898989612416565b6000610c588688018861282d565b9050808314610cbb5760405162461bcd60e51b815260206004820152602960248201527f3230414354533a496e636f72726563742046696e616c697a65206f6e2054617260448201526819d95d08195d995b9d60ba1b606482015260840161062b565b6000610140890135610cd76101208b01356101008c0135612ced565b610ce19190612ced565b90506000610cf560608b0160408c01612812565b90508160096000610d0c60c08e0160a08f01612812565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d5e9190612b3f565b9091555082905060086000610d7960c08e0160a08f01612812565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254610dcb9190612b3f565b90915550610de590506101208b01356101008c0135612ced565b60086000610dfa6101008e0160e08f01612812565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254610e4c9190612ced565b9091555050600d546001600160a01b039081166000908152600860209081526040808320938516835292905290812080546101408d01359290610e90908490612ced565b90915550506000858152600460205260409081902060039055517fa1775c1feb2a037de55a5c0f4bea4b713d77fb67da2490e8440d85202f9de8ba90610ed99087815260200190565b60405180910390a150505050505050505050565b600081604051602001610f009190612b97565b60408051601f1981840301815291815281516020928301206000818152600490935291205490915015610f455760405162461bcd60e51b815260040161062b90612d05565b6020808301356000908152600290915260409020546001600160a01b031680610fd65760405162461bcd60e51b815260206004820152603760248201527f3230414354533a536f7572636520626c6f636b636861696e206e6f742073757060448201527f706f727465642062792074617267657420323041435453000000000000000000606482015260840161062b565b7f00000000000000000000000000000000000000000000000000000000000000008360600135146110195760405162461bcd60e51b815260040161062b90612cb6565b61102a610100840160e08501612812565b6001600160a01b0316336001600160a01b03161461109f5760405162461bcd60e51b815260206004820152602c60248201527f3230414354533a6d73672e73656e646572206d757374206265206c697175696460448201526b34ba3c90383937bb34b232b960a11b606482015260840161062b565b61010083013560006110b760a0860160808701612812565b3360008181526008602090815260408083206001600160a01b0386168085529083528184205485855260098452828520828652845282852054958552600a84528285209185529252909120549293509184816111138486612b3f565b61111d9190612b3f565b101561113b5760405162461bcd60e51b815260040161062b90612d4a565b428861016001351061115f5760405162461bcd60e51b815260040161062b90612d94565b42886101800135116111b35760405162461bcd60e51b815260206004820181905260248201527f3230414354533a5472616e73616374696f6e206861732074696d6564206f7574604482015260640161062b565b600660006111c760c08b0160a08c01612812565b6001600160a01b0316815260208101919091526040016000205460ff16156112315760405162461bcd60e51b815260206004820152601760248201527f3230414354533a53656e6465722069732062616e6e6564000000000000000000604482015260640161062b565b6006600061124560e08b0160c08c01612812565b6001600160a01b0316815260208101919091526040016000205460ff16156112af5760405162461bcd60e51b815260206004820152601a60248201527f3230414354533a526563697069656e742069732062616e6e6564000000000000604482015260640161062b565b6112b98583612ced565b3360009081526009602090815260408083206001600160a01b038916845282528083209390935589825260048152908290206001905590518881527febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b910160405180910390a15050505050505050565b6113537f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33611486565b6113975760405162461bcd60e51b81526020600482015260156024820152744d75737420686176652050415553455220726f6c6560581b604482015260640161062b565b61086b61259a565b6113aa600033611486565b6113c65760405162461bcd60e51b815260040161062b90612ac2565b6001600160a01b038216600081815260066020908152604091829020805460ff19168515159081179091558251938452908301527fbe490a041de95d684835a21f3975102b719d9ede8cf410d4b6b06440bf83950991015b60405180910390a15050565b611435600033611486565b6114515760405162461bcd60e51b815260040161062b90612ac2565b600c8190556040518181527f55203dc9650fae2941ab9c23c9f334c45d4108b43ce1bd822ed59f448e68d53e9060200161067e565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6114bc600033611486565b6114d85760405162461bcd60e51b815260040161062b90612ac2565b6001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527f713eb400302cebac61f82eb8de5051d38458517ffac43ae45f4a9fd5d09ee698910161141e565b61154c6000805160206131cc83398151915233611486565b6115685760405162461bcd60e51b815260040161062b90612af9565b600090815260026020526040902080546001600160a01b0319169055565b6000856040516020016115999190612b97565b60408051601f198184030181529181528151602092830120600081815260049093529120549091506001146115e05760405162461bcd60e51b815260040161062b90612c74565b7f00000000000000000000000000000000000000000000000000000000000000008660600135146116235760405162461bcd60e51b815260040161062b90612cb6565b602080870135600081815260029092526040909120546001600160a01b03169061166090826000805160206131ac83398151915289898989612416565b60008061166f87890189612e4a565b509193509150508382146116eb5760405162461bcd60e51b815260206004820152603d60248201527f3230414354533a2046696e616c697a65204f6e205461726765743a20496e636f60448201527f72726563742050726570617265204f6e20536f75726365206576656e74000000606482015260840161062b565b60006116fe6101008b0160e08c01612812565b9050600061171260a08c0160808d01612812565b6001600160a01b038084166000908152600960209081526040808320938516835292905290812080549293506101008e013592909190611753908490612b3f565b9091555050821561185f576000868152600460209081526040808320600390556001600160a01b038086168452600883528184209085168452909152812080546101008e013592906117a6908490612b3f565b925050819055506000819050806001600160a01b031663a9059cbb8d60c00160208101906117d49190612812565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526101008f01356024820152604401602060405180830381600087803b15801561182057600080fd5b505af1158015611834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118589190612b56565b5050611872565b6000868152600460205260409020600290555b6040518681527ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb89060200160405180910390a15050505050505050505050565b6118ca6000805160206131cc83398151915233611486565b6118e65760405162461bcd60e51b815260040161062b90612af9565b8161192b5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908189b1bd8dad8da185a5b881a59605a1b604482015260640161062b565b6001600160a01b0381166119815760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420766572696669657220616464726573730000000000000000604482015260640161062b565b60009182526003602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b600082815260016020819052604090912001546119cb90610703565b6107eb5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b606482015260840161062b565b336000908152600b602090815260408083206001600160a01b038616845290915290205415611aa15760405162461bcd60e51b815260206004820152601860248201527f3230414354533a416374697665207769746864726177616c0000000000000000604482015260640161062b565b3360008181526008602090815260408083206001600160a01b038716808552908352818420549484526009835281842090845290915290205482611ae58284612b3f565b1015611b035760405162461bcd60e51b815260040161062b90612d4a565b336000908152600a602090815260408083206001600160a01b03881684529091529020839055600c54611b37904290612ced565b336000818152600b602090815260408083206001600160a01b038a168452909152908190209290925590517f04c56a409d50971e45c5a2d96e5d557d2b0f1d66d40f14b141e4c958b0f39b3291610b529187908790612b73565b3360009081526006602052604090205460ff1615611c085760405162461bcd60e51b815260206004820152602e60248201527f3230414354533a4163636f756e742069732062616e6e65642066726f6d20646560448201526d706f736974696e672066756e647360901b606482015260840161062b565b3360009081526008602090815260408083206001600160a01b038616845290915281208054839290611c3b908490612ced565b90915550506040516323b872dd60e01b815282906001600160a01b038216906323b872dd90611c7290339030908790600401612b73565b602060405180830381600087803b158015611c8c57600080fd5b505af1158015611ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc49190612b56565b507f2798f84995657001955c19814647d2d5155729b42e2fcc231b67508b2a0931c5338484604051611cf893929190612b73565b60405180910390a1505050565b600087604051602001611d189190612b97565b60408051601f1981840301815291815281516020928301206000818152600490935291205490915015611d5d5760405162461bcd60e51b815260040161062b90612d05565b7f0000000000000000000000000000000000000000000000000000000000000000886020013514611da05760405162461bcd60e51b815260040161062b90612cb6565b4288610160013510611dc45760405162461bcd60e51b815260040161062b90612d94565b60608801356000908152600260205260409020546001600160a01b031680611e4257604080518381526000602082018190526001928201929092526080606082018190528101919091526000805160206131ac8339815191529060a0015b60405180910390a1506000908152600460205260409020600290556122a8565b611e758960600135827febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b8b8b8b8b612416565b6000611e83888a018a61282d565b9050808314611ee55760405162461bcd60e51b815260206004820152602860248201527f3230414354533a496e636f72726563742050726570617265204f6e2054617267604482015267195d08195d995b9d60c21b606482015260840161062b565b50428961018001351015611f3357604080518381526000602082018190526003928201929092526080606082018190528101919091526000805160206131ac8339815191529060a001611e22565b60066000611f4760c08c0160a08d01612812565b6001600160a01b0316815260208101919091526040016000205460ff1615611fa957604080518381526000602082018190526005928201929092526080606082018190528101919091526000805160206131ac8339815191529060a001611e22565b60066000611fbd60e08c0160c08d01612812565b6001600160a01b0316815260208101919091526040016000205460ff161561201f57604080518381526000602082018190526006928201929092526080606082018190528101919091526000805160206131ac8339815191529060a001611e22565b60006101408a013561203b6101208c01356101008d0135612ced565b6120459190612ced565b9050600061205960608c0160408d01612812565b9050600080826001600160a01b03166323b872dd60e01b8e60a00160208101906120839190612812565b308760405160240161209793929190612b73565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516120d59190612f20565b6000604051808303816000865af19150503d8060008114612112576040519150601f19603f3d011682016040523d82523d6000602084013e612117565b606091505b509150915081612172576000805160206131ac833981519152866000600461213e85612615565b60405161214e9493929190612f68565b60405180910390a150505060009283525050600460205260409020600290556122a8565b83600860008f60a001602081019061218a9190612812565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546121dc9190612ced565b9250508190555083600960008f60a00160208101906121fb9190612812565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461224d9190612ced565b9091555050600086815260046020908152604080832060019081905581518a81529283015281018290526080606082018190528101919091526000805160206131ac8339815191529060a00160405180910390a15050505050505b50505050505050565b6122bb8282611486565b6107775760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6123268282611486565b156107775760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60005460ff166123cc5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161062b565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000878152600360205260409020546001600160a01b0316806124895760405162461bcd60e51b815260206004820152602560248201527f4e6f207265676973746572656420766572696669657220666f7220626c6f636b60448201526431b430b4b760d91b606482015260840161062b565b6000888152600260205260409020546001600160a01b038881169116146125005760405162461bcd60e51b815260206004820152602560248201527f44617461206e6f7420656d697474656420627920617070726f76656420636f6e6044820152641d1c9858dd60da1b606482015260840161062b565b6000888888888860405160200161251b959493929190612f99565b60408051601f198184030181529082905263260e748160e11b825291506001600160a01b03831690634c1ce9029061255f908c908b9086908a908a90600401612fd3565b60006040518083038186803b15801561257757600080fd5b505afa15801561258b573d6000803e3d6000fd5b50505050505050505050505050565b60005460ff16156125e05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161062b565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586123f93390565b60606024825110156126515761262b82516126c6565b60405160200161263b9190613027565b6040516020818303038152906040529050919050565b815160049092019160441180156126ab57600083806020019051810190612678919061307d565b9050612683816126c6565b6040516020016126939190613096565b60405160208183030381529060405292505050919050565b828060200190518101906126bf91906130c5565b9392505050565b6060816126ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561271457806126fe8161313c565b915061270d9050600a8361316d565b91506126ee565b60008167ffffffffffffffff81111561272f5761272f612ddb565b6040519080825280601f01601f191660200182016040528015612759576020820181803683370190505b5090505b84156127c45761276e600183612b3f565b915061277b600a86613181565b612786906030612ced565b60f81b81838151811061279b5761279b613195565b60200101906001600160f81b031916908160001a9053506127bd600a8661316d565b945061275d565b949350505050565b6000602082840312156127de57600080fd5b81356001600160e01b0319811681146126bf57600080fd5b80356001600160a01b038116811461280d57600080fd5b919050565b60006020828403121561282457600080fd5b6126bf826127f6565b60006020828403121561283f57600080fd5b5035919050565b6000806040838503121561285957600080fd5b82359150612869602084016127f6565b90509250929050565b6000806040838503121561288557600080fd5b61288e836127f6565b9150612869602084016127f6565b60006101a082840312156128af57600080fd5b50919050565b60008083601f8401126128c757600080fd5b50813567ffffffffffffffff8111156128df57600080fd5b6020830191508360208285010111156128f757600080fd5b9250929050565b60008060008060006101e0868803121561291757600080fd5b612921878761289c565b94506101a086013567ffffffffffffffff8082111561293f57600080fd5b61294b89838a016128b5565b90965094506101c088013591508082111561296557600080fd5b50612972888289016128b5565b969995985093965092949392505050565b60006101a0828403121561299657600080fd5b6126bf838361289c565b80151581146129ae57600080fd5b50565b600080604083850312156129c457600080fd5b6129cd836127f6565b915060208301356129dd816129a0565b809150509250929050565b600080604083850312156129fb57600080fd5b612a04836127f6565b946020939093013593505050565b6000806000806000806000610200888a031215612a2e57600080fd5b612a38898961289c565b96506101a088013567ffffffffffffffff80821115612a5657600080fd5b612a628b838c016128b5565b90985096506101c08a0135915080821115612a7c57600080fd5b612a888b838c016128b5565b90965094506101e08a0135915080821115612aa257600080fd5b50612aaf8a828b016128b5565b989b979a50959850939692959293505050565b6020808252601b908201527f3230414354533a4d75737420686176652041444d494e20726f6c650000000000604082015260600190565b6020808252601690820152754d7573742068617665204d415050494e4720726f6c6560501b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015612b5157612b51612b29565b500390565b600060208284031215612b6857600080fd5b81516126bf816129a0565b6001600160a01b039384168152919092166020820152604081019190915260600190565b81358152602080830135908201526101a08101612bb6604084016127f6565b6001600160a01b0316604083015260608381013590830152612bda608084016127f6565b6001600160a01b03166080830152612bf460a084016127f6565b6001600160a01b031660a0830152612c0e60c084016127f6565b6001600160a01b031660c0830152612c2860e084016127f6565b6001600160a01b031660e0830152610100838101359083015261012080840135908301526101408084013590830152610160808401359083015261018092830135929091019190915290565b60208082526022908201527f3230414354533a5472616e73616374696f6e206e6f7420696e2070726f677265604082015261737360f01b606082015260800190565b6020808252601e908201527f3230414354533a4e6f7420666f72207468697320626c6f636b636861696e0000604082015260600190565b60008219821115612d0057612d00612b29565b500190565b60208082526025908201527f3230414354533a5472616e73616374696f6e20616c72656164792072656769736040820152641d195c995960da1b606082015260800190565b6020808252602a908201527f3230414354533a416d6f756e74206578636565647320756e616c6c6f6361746560408201526964206465706f7369747360b01b606082015260800190565b60208082526027908201527f3230414354533a42696464696e6720706572696f64207374696c6c20696e2070604082015266726f677265737360c81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612e1a57612e1a612ddb565b604052919050565b600067ffffffffffffffff821115612e3c57612e3c612ddb565b50601f01601f191660200190565b60008060008060808587031215612e6057600080fd5b843593506020850135612e72816129a0565b925060408501359150606085013567ffffffffffffffff811115612e9557600080fd5b8501601f81018713612ea657600080fd5b8035612eb9612eb482612e22565b612df1565b818152886020838501011115612ece57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60005b83811015612f0b578181015183820152602001612ef3565b83811115612f1a576000848401525b50505050565b60008251612f32818460208701612ef0565b9190910192915050565b60008151808452612f54816020860160208601612ef0565b601f01601f19169290920160200192915050565b8481528315156020820152826040820152608060608201526000612f8f6080830184612f3c565b9695505050505050565b8581526bffffffffffffffffffffffff198560601b1660208201528360348201528183605483013760009101605401908152949350505050565b858152846020820152608060408201526000612ff26080830186612f3c565b8281036060840152838152838560208301376000602085830101526020601f19601f8601168201019150509695505050505050565b7f52657665727420666f7220756e6b6e6f776e206572726f722e204572726f722081526703632b733ba341d160c51b602082015260008251613070816028850160208701612ef0565b9190910160280192915050565b60006020828403121561308f57600080fd5b5051919050565b6602830b734b19d160cd1b8152600082516130b8816007850160208701612ef0565b9190910160070192915050565b6000602082840312156130d757600080fd5b815167ffffffffffffffff8111156130ee57600080fd5b8201601f810184136130ff57600080fd5b805161310d612eb482612e22565b81815285602083850101111561312257600080fd5b613133826020830160208601612ef0565b95945050505050565b600060001982141561315057613150612b29565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261317c5761317c613157565b500490565b60008261319057613190613157565b500690565b634e487b7160e01b600052603260045260246000fdfe915add4368b699f4256098461a22d41dad802a0938602d4ae1d5e5e7133a908c0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd5a2646970667358221220ebbdde4487a7ff87b46b8335e3df2733c425c000a867014289ea485cb7184f6c64736f6c63430008090033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_MAPPING_ROLE = "MAPPING_ROLE";

    public static final String FUNC_PAUSER_ROLE = "PAUSER_ROLE";

    public static final String FUNC_ADDREMOTECROSSCHAINCONTROL = "addRemoteCrosschainControl";

    public static final String FUNC_ADDVERIFIER = "addVerifier";

    public static final String FUNC_ALLOCATED = "allocated";

    public static final String FUNC_BANNED = "banned";

    public static final String FUNC_DEPOSITS = "deposits";

    public static final String FUNC_FINALIZEONSOURCE = "finalizeOnSource";

    public static final String FUNC_FINALIZEONTARGET = "finalizeOnTarget";

    public static final String FUNC_FINALIZEWITHDRAWAL = "finalizeWithdrawal";

    public static final String FUNC_FROZEN = "frozen";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_INFRASTRUCTUREACCOUNT = "infrastructureAccount";

    public static final String FUNC_LPDEPOSIT = "lpDeposit";

    public static final String FUNC_MYBLOCKCHAINID = "myBlockchainId";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_PREPAREONSOURCE = "prepareOnSource";

    public static final String FUNC_PREPAREONTARGET = "prepareOnTarget";

    public static final String FUNC_REMOVEREMOTECROSSCHAINCONTROL = "removeRemoteCrosschainControl";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REQUESTWITHDRAWAL = "requestWithdrawal";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETBANNED = "setBanned";

    public static final String FUNC_SETFROZEN = "setFrozen";

    public static final String FUNC_SETINFRASTRUCTUREACCOUNT = "setInfrastructureAccount";

    public static final String FUNC_SETWITHDRAWALWAITPERIOD = "setWithdrawalWaitPeriod";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TXCOMPLETE = "txComplete";

    public static final String FUNC_TXSTATE = "txState";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_WITHDRAWALWAITPERIOD = "withdrawalWaitPeriod";

    public static final String FUNC_WITHDRAWALS = "withdrawals";

    public static final String FUNC_WITHDRAWALSTIME = "withdrawalsTime";

    public static final Event BANNED_EVENT = new Event("Banned", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event FINALIZEONSOURCE_EVENT = new Event("FinalizeOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event FINALIZEONTARGET_EVENT = new Event("FinalizeOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event FINALIZEWITHDRAWAL_EVENT = new Event("FinalizeWithdrawal", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event FROZEN_EVENT = new Event("Frozen", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event LPDEPOSITED_EVENT = new Event("LpDeposited", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event PAUSED_EVENT = new Event("Paused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event PREPAREONSOURCE_EVENT = new Event("PrepareOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event PREPAREONTARGET_EVENT = new Event("PrepareOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event SETINFRASTRUCTUREACCOUNT_EVENT = new Event("SetInfrastructureAccount", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event SETWITHDRAWALWAITPERIOD_EVENT = new Event("SetWithdrawalWaitPeriod", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event WITHDRAWALREQUESTED_EVENT = new Event("WithdrawalRequested", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<BannedEventResponse> getBannedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BANNED_EVENT, transactionReceipt);
        ArrayList<BannedEventResponse> responses = new ArrayList<BannedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BannedEventResponse typedResponse = new BannedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._banned = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BannedEventResponse> bannedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, BannedEventResponse>() {
            @Override
            public BannedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BANNED_EVENT, log);
                BannedEventResponse typedResponse = new BannedEventResponse();
                typedResponse.log = log;
                typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._banned = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BannedEventResponse> bannedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BANNED_EVENT));
        return bannedEventFlowable(filter);
    }

    public List<FinalizeOnSourceEventResponse> getFinalizeOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, transactionReceipt);
        ArrayList<FinalizeOnSourceEventResponse> responses = new ArrayList<FinalizeOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnSourceEventResponse>() {
            @Override
            public FinalizeOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, log);
                FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONSOURCE_EVENT));
        return finalizeOnSourceEventFlowable(filter);
    }

    public List<FinalizeOnTargetEventResponse> getFinalizeOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, transactionReceipt);
        ArrayList<FinalizeOnTargetEventResponse> responses = new ArrayList<FinalizeOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnTargetEventResponse>() {
            @Override
            public FinalizeOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, log);
                FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONTARGET_EVENT));
        return finalizeOnTargetEventFlowable(filter);
    }

    public List<FinalizeWithdrawalEventResponse> getFinalizeWithdrawalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEWITHDRAWAL_EVENT, transactionReceipt);
        ArrayList<FinalizeWithdrawalEventResponse> responses = new ArrayList<FinalizeWithdrawalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeWithdrawalEventResponse typedResponse = new FinalizeWithdrawalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeWithdrawalEventResponse> finalizeWithdrawalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeWithdrawalEventResponse>() {
            @Override
            public FinalizeWithdrawalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEWITHDRAWAL_EVENT, log);
                FinalizeWithdrawalEventResponse typedResponse = new FinalizeWithdrawalEventResponse();
                typedResponse.log = log;
                typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeWithdrawalEventResponse> finalizeWithdrawalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEWITHDRAWAL_EVENT));
        return finalizeWithdrawalEventFlowable(filter);
    }

    public List<FrozenEventResponse> getFrozenEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FROZEN_EVENT, transactionReceipt);
        ArrayList<FrozenEventResponse> responses = new ArrayList<FrozenEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FrozenEventResponse typedResponse = new FrozenEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._frozen = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FrozenEventResponse> frozenEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FrozenEventResponse>() {
            @Override
            public FrozenEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FROZEN_EVENT, log);
                FrozenEventResponse typedResponse = new FrozenEventResponse();
                typedResponse.log = log;
                typedResponse._user = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._frozen = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FrozenEventResponse> frozenEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FROZEN_EVENT));
        return frozenEventFlowable(filter);
    }

    public List<LpDepositedEventResponse> getLpDepositedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LPDEPOSITED_EVENT, transactionReceipt);
        ArrayList<LpDepositedEventResponse> responses = new ArrayList<LpDepositedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LpDepositedEventResponse typedResponse = new LpDepositedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<LpDepositedEventResponse> lpDepositedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, LpDepositedEventResponse>() {
            @Override
            public LpDepositedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(LPDEPOSITED_EVENT, log);
                LpDepositedEventResponse typedResponse = new LpDepositedEventResponse();
                typedResponse.log = log;
                typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<LpDepositedEventResponse> lpDepositedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(LPDEPOSITED_EVENT));
        return lpDepositedEventFlowable(filter);
    }

    public List<PausedEventResponse> getPausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSED_EVENT, transactionReceipt);
        ArrayList<PausedEventResponse> responses = new ArrayList<PausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PausedEventResponse typedResponse = new PausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PausedEventResponse>() {
            @Override
            public PausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSED_EVENT, log);
                PausedEventResponse typedResponse = new PausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public List<PrepareOnSourceEventResponse> getPrepareOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, transactionReceipt);
        ArrayList<PrepareOnSourceEventResponse> responses = new ArrayList<PrepareOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnSourceEventResponse>() {
            @Override
            public PrepareOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, log);
                PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONSOURCE_EVENT));
        return prepareOnSourceEventFlowable(filter);
    }

    public List<PrepareOnTargetEventResponse> getPrepareOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONTARGET_EVENT, transactionReceipt);
        ArrayList<PrepareOnTargetEventResponse> responses = new ArrayList<PrepareOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnTargetEventResponse>() {
            @Override
            public PrepareOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONTARGET_EVENT, log);
                PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONTARGET_EVENT));
        return prepareOnTargetEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<SetInfrastructureAccountEventResponse> getSetInfrastructureAccountEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SETINFRASTRUCTUREACCOUNT_EVENT, transactionReceipt);
        ArrayList<SetInfrastructureAccountEventResponse> responses = new ArrayList<SetInfrastructureAccountEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SetInfrastructureAccountEventResponse typedResponse = new SetInfrastructureAccountEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SetInfrastructureAccountEventResponse> setInfrastructureAccountEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SetInfrastructureAccountEventResponse>() {
            @Override
            public SetInfrastructureAccountEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SETINFRASTRUCTUREACCOUNT_EVENT, log);
                SetInfrastructureAccountEventResponse typedResponse = new SetInfrastructureAccountEventResponse();
                typedResponse.log = log;
                typedResponse._account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SetInfrastructureAccountEventResponse> setInfrastructureAccountEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SETINFRASTRUCTUREACCOUNT_EVENT));
        return setInfrastructureAccountEventFlowable(filter);
    }

    public List<SetWithdrawalWaitPeriodEventResponse> getSetWithdrawalWaitPeriodEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SETWITHDRAWALWAITPERIOD_EVENT, transactionReceipt);
        ArrayList<SetWithdrawalWaitPeriodEventResponse> responses = new ArrayList<SetWithdrawalWaitPeriodEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SetWithdrawalWaitPeriodEventResponse typedResponse = new SetWithdrawalWaitPeriodEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._waitPeriodInSeconds = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SetWithdrawalWaitPeriodEventResponse> setWithdrawalWaitPeriodEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SetWithdrawalWaitPeriodEventResponse>() {
            @Override
            public SetWithdrawalWaitPeriodEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SETWITHDRAWALWAITPERIOD_EVENT, log);
                SetWithdrawalWaitPeriodEventResponse typedResponse = new SetWithdrawalWaitPeriodEventResponse();
                typedResponse.log = log;
                typedResponse._waitPeriodInSeconds = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SetWithdrawalWaitPeriodEventResponse> setWithdrawalWaitPeriodEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SETWITHDRAWALWAITPERIOD_EVENT));
        return setWithdrawalWaitPeriodEventFlowable(filter);
    }

    public List<UnpausedEventResponse> getUnpausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSED_EVENT, transactionReceipt);
        ArrayList<UnpausedEventResponse> responses = new ArrayList<UnpausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UnpausedEventResponse typedResponse = new UnpausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnpausedEventResponse>() {
            @Override
            public UnpausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSED_EVENT, log);
                UnpausedEventResponse typedResponse = new UnpausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public List<WithdrawalRequestedEventResponse> getWithdrawalRequestedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(WITHDRAWALREQUESTED_EVENT, transactionReceipt);
        ArrayList<WithdrawalRequestedEventResponse> responses = new ArrayList<WithdrawalRequestedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            WithdrawalRequestedEventResponse typedResponse = new WithdrawalRequestedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<WithdrawalRequestedEventResponse> withdrawalRequestedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, WithdrawalRequestedEventResponse>() {
            @Override
            public WithdrawalRequestedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(WITHDRAWALREQUESTED_EVENT, log);
                WithdrawalRequestedEventResponse typedResponse = new WithdrawalRequestedEventResponse();
                typedResponse.log = log;
                typedResponse._lp = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._erc20 = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<WithdrawalRequestedEventResponse> withdrawalRequestedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(WITHDRAWALREQUESTED_EVENT));
        return withdrawalRequestedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeWithdrawal(String _erc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeWithdrawal(String _erc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> lpDeposit(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_LPDEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_lpDeposit(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_LPDEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeRemoteCrosschainControl(BigInteger _blockchainId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_removeRemoteCrosschainControl(BigInteger _blockchainId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> requestWithdrawal(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_requestWithdrawal(String _erc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _erc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setWithdrawalWaitPeriod(BigInteger _withdrawalWaitPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setWithdrawalWaitPeriod(BigInteger _withdrawalWaitPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALWAITPERIOD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawalWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawalWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class TxInfo extends StaticStruct {
        public BigInteger crosschainTxId;

        public BigInteger sourceBcId;

        public String sourceErc20Address;

        public BigInteger targetBcId;

        public String targetErc20Address;

        public String sender;

        public String recipient;

        public String liquidityProvider;

        public BigInteger amount;

        public BigInteger lpFee;

        public BigInteger inFee;

        public BigInteger biddingPeriodEnd;

        public BigInteger timeout;

        public TxInfo(BigInteger crosschainTxId, BigInteger sourceBcId, String sourceErc20Address, BigInteger targetBcId, String targetErc20Address, String sender, String recipient, String liquidityProvider, BigInteger amount, BigInteger lpFee, BigInteger inFee, BigInteger biddingPeriodEnd, BigInteger timeout) {
            super(new org.web3j.abi.datatypes.generated.Uint256(crosschainTxId),new org.web3j.abi.datatypes.generated.Uint256(sourceBcId),new org.web3j.abi.datatypes.Address(sourceErc20Address),new org.web3j.abi.datatypes.generated.Uint256(targetBcId),new org.web3j.abi.datatypes.Address(targetErc20Address),new org.web3j.abi.datatypes.Address(sender),new org.web3j.abi.datatypes.Address(recipient),new org.web3j.abi.datatypes.Address(liquidityProvider),new org.web3j.abi.datatypes.generated.Uint256(amount),new org.web3j.abi.datatypes.generated.Uint256(lpFee),new org.web3j.abi.datatypes.generated.Uint256(inFee),new org.web3j.abi.datatypes.generated.Uint256(biddingPeriodEnd),new org.web3j.abi.datatypes.generated.Uint256(timeout));
            this.crosschainTxId = crosschainTxId;
            this.sourceBcId = sourceBcId;
            this.sourceErc20Address = sourceErc20Address;
            this.targetBcId = targetBcId;
            this.targetErc20Address = targetErc20Address;
            this.sender = sender;
            this.recipient = recipient;
            this.liquidityProvider = liquidityProvider;
            this.amount = amount;
            this.lpFee = lpFee;
            this.inFee = inFee;
            this.biddingPeriodEnd = biddingPeriodEnd;
            this.timeout = timeout;
        }

        public TxInfo(Uint256 crosschainTxId, Uint256 sourceBcId, Address sourceErc20Address, Uint256 targetBcId, Address targetErc20Address, Address sender, Address recipient, Address liquidityProvider, Uint256 amount, Uint256 lpFee, Uint256 inFee, Uint256 biddingPeriodEnd, Uint256 timeout) {
            super(crosschainTxId,sourceBcId,sourceErc20Address,targetBcId,targetErc20Address,sender,recipient,liquidityProvider,amount,lpFee,inFee,biddingPeriodEnd,timeout);
            this.crosschainTxId = crosschainTxId.getValue();
            this.sourceBcId = sourceBcId.getValue();
            this.sourceErc20Address = sourceErc20Address.getValue();
            this.targetBcId = targetBcId.getValue();
            this.targetErc20Address = targetErc20Address.getValue();
            this.sender = sender.getValue();
            this.recipient = recipient.getValue();
            this.liquidityProvider = liquidityProvider.getValue();
            this.amount = amount.getValue();
            this.lpFee = lpFee.getValue();
            this.inFee = inFee.getValue();
            this.biddingPeriodEnd = biddingPeriodEnd.getValue();
            this.timeout = timeout.getValue();
        }
    }

    public static class BannedEventResponse extends BaseEventResponse {
        public String _user;

        public Boolean _banned;
    }

    public static class FinalizeOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class FinalizeOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class FinalizeWithdrawalEventResponse extends BaseEventResponse {
        public String _lp;

        public String _erc20;

        public BigInteger _amount;
    }

    public static class FrozenEventResponse extends BaseEventResponse {
        public String _user;

        public Boolean _frozen;
    }

    public static class LpDepositedEventResponse extends BaseEventResponse {
        public String _lp;

        public String _erc20;

        public BigInteger _amount;
    }

    public static class PausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class PrepareOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;

        public Boolean _success;

        public BigInteger _failureReason;

        public String _msg;
    }

    public static class PrepareOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class SetInfrastructureAccountEventResponse extends BaseEventResponse {
        public String _account;
    }

    public static class SetWithdrawalWaitPeriodEventResponse extends BaseEventResponse {
        public BigInteger _waitPeriodInSeconds;
    }

    public static class UnpausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class WithdrawalRequestedEventResponse extends BaseEventResponse {
        public String _lp;

        public String _erc20;

        public BigInteger _amount;
    }
}
