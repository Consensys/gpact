package net.consensys.gpact.soliditywrappers.applications.twentyacts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.7-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class TwentyActs extends Contract {
    public static final String BINARY = "60806040523480156200001157600080fd5b5060405162003746380380620037468339810160408190526200003491620001ad565b6000805460ff19168155600280546001600160a01b03191633908117909155604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350336200008e60008262000115565b620000ba7f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd58262000115565b620000e67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8262000115565b50600592909255601155601280546001600160a01b0319166001600160a01b03909216919091179055620001f5565b62000121828262000125565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001215760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600080600060608486031215620001c357600080fd5b83516020850151604086015191945092506001600160a01b0381168114620001ea57600080fd5b809150509250925092565b61354180620002056000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c80638104d37511610151578063b0d94a97116100c3578063d42a85e211610087578063d42a85e214610608578063d547741f1461063c578063da95ebf71461064f578063e63ab1e914610662578063ee2eefa214610689578063f2fde38b1461069c57600080fd5b8063b0d94a9714610569578063b28320961461057c578063b76722ed1461058f578063cd47bde1146105ba578063d0516650146105e557600080fd5b80639017f79e116101155780639017f79e146104cc57806391d14854146104ef5780639c8d83bb146105025780639efde20614610525578063a217fddf1461054e578063ac869cd81461055657600080fd5b80638104d3751461044a5780638456cb591461047557806388c9bcce1461047d5780638da5cb5b146104905780638f601f66146104a157600080fd5b80633e460037116101ea5780634abf24cb116101ae5780634abf24cb146103eb5780635c975abb146103fe5780635e7616fb146104095780636056a52a1461041c57806363ea34dc1461042f578063715018a61461044257600080fd5b80633e4600371461038d5780633f4ba83a146103a0578063439160df146103a857806343a12224146103b157806347e7ef24146103d857600080fd5b8063248a9ca311610231578063248a9ca3146102f85780632b302cbd1461031c5780632f2ff15d14610347578063327c810e1461035a57806336568abe1461037a57600080fd5b806301ffc9a71461026e5780630715ffb81461029657806313bd55ae146102ab57806319836dc7146102ce5780631ebdd336146102e1575b600080fd5b61028161027c366004612e63565b6106af565b60405190151581526020015b60405180910390f35b6102a96102a4366004612eb0565b6106e6565b005b6102816102b9366004612ecb565b60076020526000908152604090205460ff1681565b6102a96102dc366004612ee4565b61078a565b6102ea60115481565b60405190815260200161028d565b6102ea610306366004612ecb565b6000908152600160208190526040909120015490565b6102ea61032a366004612f10565b600e60209081526000928352604080842090915290825290205481565b6102a9610355366004612ee4565b6107e2565b6102ea610368366004612ecb565b60066020526000908152604090205481565b6102a9610388366004612ee4565b610872565b6102a961039b366004612ee4565b6108ec565b6102a96109ab565b6102ea60055481565b6102ea7f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd581565b6102a96103e6366004612f3a565b610a3a565b6102a96103f9366004612eb0565b610c14565b60005460ff16610281565b6102a9610417366004612fc6565b610f27565b6102a961042a36600461304b565b61134a565b6102a961043d366004613087565b611469565b6102a9611aa8565b60125461045d906001600160a01b031681565b6040516001600160a01b03909116815260200161028d565b6102a9611b1c565b6102a961048b3660046130b5565b611ba6565b6002546001600160a01b031661045d565b6102ea6104af366004612f10565b600d60209081526000928352604080842090915290825290205481565b6102816104da366004612eb0565b60096020526000908152604090205460ff1681565b6102816104fd366004612ee4565b611c39565b610281610510366004612eb0565b600b6020526000908152604090205460ff1681565b61045d610533366004612ecb565b600a602052600090815260409020546001600160a01b031681565b6102ea600081565b6102a96105643660046130b5565b611c64565b6102a9610577366004612fc6565b611cf7565b6102a961058a366004612ee4565b612054565b6102ea61059d366004612f10565b601060209081526000928352604080842090915290825290205481565b6102ea6105c8366004612f10565b600f60209081526000928352604080842090915290825290205481565b6102816105f3366004612eb0565b600c6020526000908152604090205460ff1681565b61045d610616366004612f3a565b60086020908152600092835260408084209091529082529020546001600160a01b031681565b6102a961064a366004612ee4565b612147565b6102a961065d366004612f3a565b6121c8565b6102ea7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6102a96106973660046130ec565b612395565b6102a96106aa366004612eb0565b612a14565b60006001600160e01b03198216637965db0b60e01b14806106e057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6106f1600033611c39565b6107685760405162461bcd60e51b815260206004820152603860248201527f3230414354533a2053657420496e667261737472756374757265204163636f7560448201527f6e743a204d75737420686176652041444d494e20726f6c65000000000000000060648201526084015b60405180910390fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146107b45760405162461bcd60e51b815260040161075f9061319c565b60009182526004602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b60008281526001602081905260409091200154610800905b33611c39565b6108645760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b606482015260840161075f565b61086e8282612aff565b5050565b6001600160a01b03811633146108e25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161075f565b61086e8282612b6a565b6109167f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd533611c39565b61097d5760405162461bcd60e51b815260206004820152603260248201527f3230414354533a2053657420427269646765204d617070696e673a204d7573746044820152712068617665204d415050494e4720726f6c6560701b606482015260840161075f565b6000918252600a602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6109d57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33611c39565b610a305760405162461bcd60e51b815260206004820152602660248201527f3230414354533a20556e70617573653a204d75737420686176652050415553456044820152655220726f6c6560d01b606482015260840161075f565b610a38612bd1565b565b6001600160a01b03821660009081526009602052604090205460ff16610ac85760405162461bcd60e51b815260206004820152603960248201527f3230414354533a204465706f7369743a204465706f73697473206e6f7420616c60448201527f6c6f77656420666f722045524320323020636f6e747261637400000000000000606482015260840161075f565b336000908152600b602052604090205460ff1615610b4e5760405162461bcd60e51b815260206004820152603860248201527f3230414354533a204465706f7369743a204163636f756e742069732062616e6e60448201527f65642066726f6d206465706f736974696e672066756e64730000000000000000606482015260840161075f565b336000908152600d602090815260408083206001600160a01b038616845290915281208054839290610b819084906131e7565b90915550506040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd90606401602060405180830381600087803b158015610bd657600080fd5b505af1158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e91906131ff565b50505050565b3360009081526010602090815260408083206001600160a01b0385168452909152902054610c9e5760405162461bcd60e51b815260206004820152603160248201527f3230414354533a2046696e616c697a65205769746864726177616c3a204e6f206044820152701858dd1a5d99481dda5d1a191c985dd85b607a1b606482015260840161075f565b3360009081526010602090815260408083206001600160a01b03851684529091529020544210610d365760405162461bcd60e51b815260206004820152603960248201527f3230414354533a2046696e616c697a65205769746864726177616c3a2041747460448201527f656d7074696e6720746f207769746864726177206561726c7900000000000000606482015260840161075f565b336000908152600c602052604090205460ff1615610daa5760405162461bcd60e51b815260206004820152602b60248201527f3230414354533a2046696e616c697a65205769746864726177616c3a2041636360448201526a37bab73a10333937bd32b760a91b606482015260840161075f565b336000818152600d602090815260408083206001600160a01b03861680855290835281842054948452600f8352818420908452909152902054808211610e515760405162461bcd60e51b815260206004820152603660248201527f3230414354533a2057697468647261773a205769746864726177616c20616d6f6044820152751d5b9d080f8819195c1bdcda5d195908185b5bdd5b9d60521b606482015260840161075f565b336000908152600f602090815260408083206001600160a01b0387168452909152812055610e7f818361321c565b336000818152600d602090815260408083206001600160a01b038916808552925291829020939093555163a9059cbb60e01b815260048101919091526024810183905284919063a9059cbb90604401602060405180830381600087803b158015610ee857600080fd5b505af1158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2091906131ff565b5050505050565b600085604051602001610f3a9190613233565b60408051601f19818403018152918152815160209283012060008181526006909352912054909150600114610fd15760405162461bcd60e51b815260206004820152603760248201527f3230414354533a2046696e616c697a65204f6e20536f757263653a205472616e60448201527673616374696f6e206e6f7420696e2070726f677265737360481b606482015260840161075f565b6005548660200135146110425760405162461bcd60e51b815260206004820152603360248201527f3230414354533a2046696e616c697a65204f6e20536f757263653a204e6f74206044820152723337b9103a3434b990313637b1b5b1b430b4b760691b606482015260840161075f565b6020808701356000908152600a90915260409020546001600160a01b03166110936060880135827ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb889898989612c64565b60006110a186880188612ecb565b90508083146111185760405162461bcd60e51b815260206004820152603e60248201527f3230414354533a2046696e616c697a65204f6e20536f757263653a20496e636f60448201527f72726563742046696e616c697a65206f6e20546172676574206576656e740000606482015260840161075f565b60006101408901356111346101208b01356101008c01356131e7565b61113e91906131e7565b9050600061115260a08b0160808c01612eb0565b905081600e600061116960c08e0160a08f01612eb0565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008282546111bb919061321c565b90915550829050600d60006111d660c08e0160a08f01612eb0565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254611228919061321c565b9091555061124290506101208b01356101008c01356131e7565b600d60006112576101008e0160e08f01612eb0565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112a991906131e7565b90915550506012546001600160a01b039081166000908152600d60209081526040808320938516835292905290812080546101408d013592906112ed9084906131e7565b90915550506000858152600660205260409081902060039055517fa1775c1feb2a037de55a5c0f4bea4b713d77fb67da2490e8440d85202f9de8ba906113369087815260200190565b60405180910390a150505050505050505050565b6113747f0121836bd496e565c22481bc40c30c41db1fecf07c7376491a377f8056cfccd533611c39565b6113db5760405162461bcd60e51b815260206004820152603260248201527f3230414354533a2073657420455243203230204d617070696e673a204d7573746044820152712068617665204d415050494e4720726f6c6560701b606482015260840161075f565b6001600160a01b038381166000818152600960209081526040808320805460ff191660011790556008825280832087845282529182902080549486166001600160a01b031990951685179055815192835282018590528101919091527f50b50bfc85bd27d4d10729da017c95d43e415ff0b7ff52e4b4733e5e77b7ee039060600160405180910390a1505050565b60008160405160200161147c9190613233565b60408051601f19818403018152918152815160209283012060008181526006909352912054909150156115135760405162461bcd60e51b815260206004820152603960248201527f3230414354533a2050726570617265204f6e205461726765743a205472616e736044820152781858dd1a5bdb88185b1c9958591e481c9959da5cdd195c9959603a1b606482015260840161075f565b6020808301356000908152600a90915260409020546001600160a01b0316806115a45760405162461bcd60e51b815260206004820152603860248201527f3230414354533a20536f7572636520626c6f636b636861696e206e6f7420737560448201527f70706f7274656420627920746172676574203230414354530000000000000000606482015260840161075f565b60006115b660a0850160808601612eb0565b905060006008816115cd60a0880160808901612eb0565b6001600160a01b03908116825260208083019390935260409182016000908120898501358252909352918190205490911691506116109060608701908701612eb0565b6001600160a01b0316816001600160a01b03161461168a5760405162461bcd60e51b815260206004820152603160248201527f3230414354533a20546f6b656e206e6f74207472616e7366657261626c65207460448201527006f2072657175657374656420455243323607c1b606482015260840161075f565b6005548560600135146116fa5760405162461bcd60e51b815260206004820152603260248201527f3230414354533a2050726570617265204f6e205461726765743a204e6f74206660448201527137b9103a3434b990313637b1b5b1b430b4b760711b606482015260840161075f565b61170b610100860160e08701612eb0565b6001600160a01b0316336001600160a01b031614611793576040805162461bcd60e51b81526020600482015260248101919091527f3230414354533a2050726570617265204f6e205461726765743a206d73672e7360448201527f656e646572206d757374206265206c69717569646974792070726f7669646572606482015260840161075f565b336000818152600d602090815260408083206001600160a01b03871680855290835281842054858552600e8452828520828652845282852054958552600f8452828520918552925290912054610100880135929083816117f3848661321c565b6117fd919061321c565b11156118715760405162461bcd60e51b815260206004820152603b60248201527f3230414354533a2050726570617265205461726765743a20416d6f756e74206560448201527f78636565647320756e616c6c6f6361746564206465706f736974730000000000606482015260840161075f565b42896101600135106118955760405162461bcd60e51b815260040161075f90613310565b42896101800135116119065760405162461bcd60e51b815260206004820152603460248201527f3230414354533a2050726570617265204f6e205461726765743a205472616e736044820152731858dd1a5bdb881a185cc81d1a5b5959081bdd5d60621b606482015260840161075f565b600b600061191a60c08c0160a08d01612eb0565b6001600160a01b0316815260208101919091526040016000205460ff16156119985760405162461bcd60e51b815260206004820152602b60248201527f3230414354533a2050726570617265204f6e205461726765743a2053656e646560448201526a1c881a5cc818985b9b995960aa1b606482015260840161075f565b600b60006119ac60e08c0160c08d01612eb0565b6001600160a01b0316815260208101919091526040016000205460ff1615611a2d5760405162461bcd60e51b815260206004820152602e60248201527f3230414354533a2050726570617265204f6e205461726765743a20526563697060448201526d1a595b9d081a5cc818985b9b995960921b606482015260840161075f565b611a3784836131e7565b336000908152600e602090815260408083206001600160a01b038b1684528252808320939093558a825260068152908290206001905590518981527febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b910160405180910390a1505050505050505050565b6002546001600160a01b03163314611ad25760405162461bcd60e51b815260040161075f9061319c565b6002546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280546001600160a01b0319169055565b611b467f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33611c39565b611b9e5760405162461bcd60e51b8152602060048201526024808201527f3230414354533a2050617573653a204d75737420686176652050415553455220604482015263726f6c6560e01b606482015260840161075f565b610a38612de8565b611bb1600033611c39565b611c0e5760405162461bcd60e51b815260206004820152602860248201527f3230414354533a205365742042616e6e65643a204d75737420686176652041446044820152674d494e20726f6c6560c01b606482015260840161075f565b6001600160a01b03919091166000908152600b60205260409020805460ff1916911515919091179055565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611c6f600033611c39565b611ccc5760405162461bcd60e51b815260206004820152602860248201527f3230414354533a205365742046726f7a656e3a204d75737420686176652041446044820152674d494e20726f6c6560c01b606482015260840161075f565b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b600085604051602001611d0a9190613233565b60408051601f19818403018152918152815160209283012060008181526006909352912054909150600114611da15760405162461bcd60e51b815260206004820152603760248201527f3230414354533a2046696e616c697a65204f6e205461726765743a205472616e60448201527673616374696f6e206e6f7420696e2070726f677265737360481b606482015260840161075f565b600554866060013514611dc65760405162461bcd60e51b815260040161075f9061336d565b6020808701356000818152600a9092526040909120546001600160a01b031690611e0390826000805160206134ec83398151915289898989612c64565b600080611e12878901896133bf565b509092509050838214611e8d5760405162461bcd60e51b815260206004820152603d60248201527f3230414354533a2046696e616c697a65204f6e205461726765743a20496e636f60448201527f72726563742050726570617265204f6e20536f75726365206576656e74000000606482015260840161075f565b6000611ea06101008b0160e08c01612eb0565b90506000611eb460a08c0160808d01612eb0565b6001600160a01b038084166000908152600e60209081526040808320938516835292905290812080549293506101008e013592909190611ef590849061321c565b90915550508215612001576000868152600660209081526040808320600390556001600160a01b038086168452600d83528184209085168452909152812080546101008e01359290611f4890849061321c565b925050819055506000819050806001600160a01b031663a9059cbb8d60c0016020810190611f769190612eb0565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526101008f01356024820152604401602060405180830381600087803b158015611fc257600080fd5b505af1158015611fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffa91906131ff565b5050612014565b6000868152600660205260409020600290555b6040518681527ffcd2e86cf9f4c15fb8156d8f47dcedcbe9982fb7bf4a093f6e9dcff180555fb89060200160405180910390a15050505050505050505050565b6002546001600160a01b0316331461207e5760405162461bcd60e51b815260040161075f9061319c565b816120c35760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908189b1bd8dad8da185a5b881a59605a1b604482015260640161075f565b6001600160a01b0381166121195760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420766572696669657220616464726573730000000000000000604482015260640161075f565b60009182526003602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b60008281526001602081905260409091200154612163906107fa565b6108e25760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b606482015260840161075f565b3360009081526010602090815260408083206001600160a01b03861684529091529020541561224f5760405162461bcd60e51b815260206004820152602d60248201527f3230414354533a2052657175657374205769746864726177616c3a204163746960448201526c1d99481dda5d1a191c985dd85b609a1b606482015260840161075f565b336000818152600d602090815260408083206001600160a01b03871680855290835281842054858552600e8452828520828652845282852054958552600f845282852091855292529091205490919083816122aa848661321c565b6122b4919061321c565b11156123285760405162461bcd60e51b815260206004820152603d60248201527f3230414354533a20526571756573742057697468647261773a20416d6f756e7460448201527f206578636565647320756e616c6c6f6361746564206465706f73697473000000606482015260840161075f565b61233284826131e7565b336000908152600f602090815260408083206001600160a01b038a1684529091529020556011546123649042906131e7565b3360009081526010602090815260408083206001600160a01b03999099168352979052959095209490945550505050565b6000876040516020016123a89190613233565b60408051601f198184030181529181528151602092830120600081815260069093529120549091501561243f5760405162461bcd60e51b815260206004820152603960248201527f3230414354533a2050726570617265204f6e20536f757263653a205472616e736044820152781858dd1a5bdb88185b1c9958591e481c9959da5cdd195c9959603a1b606482015260840161075f565b6005548860200135146124645760405162461bcd60e51b815260040161075f9061336d565b42886101600135106124885760405162461bcd60e51b815260040161075f90613310565b60608801356000908152600a60205260409020546001600160a01b0316806124f057604080518381526000602082015260018183015290516000805160206134ec8339815191529181900360600190a150600090815260066020526040902060029055612a0b565b6125238960600135827febbd06ae0a664afd2f4e40753ca124484efd240737cf74577b9fb5418fe3146b8b8b8b8b612c64565b6000612531888a018a612ecb565b90508083146125a85760405162461bcd60e51b815260206004820152603c60248201527f3230414354533a2050726570617265204f6e20536f757263653a20496e636f7260448201527f726563742050726570617265204f6e20546172676574206576656e7400000000606482015260840161075f565b5060006125bb60608b0160408c01612eb0565b9050600060086000836001600160a01b03166001600160a01b0316815260200190815260200160002060008c60600135815260200190815260200160002060009054906101000a90046001600160a01b031690508a60800160208101906126229190612eb0565b6001600160a01b0316816001600160a01b03161461268257604080518581526000602082015260028183015290516000805160206134ec8339815191529181900360600190a1505050600090815260066020526040902060029055612a0b565b50428a610180013510156126dc5760408051848152600060208201526003918101919091526000805160206134ec833981519152906060015b60405180910390a15050600090815260066020526040902060029055612a0b565b600b60006126f060c08d0160a08e01612eb0565b6001600160a01b0316815260208101919091526040016000205460ff16156127415760408051848152600060208201526005918101919091526000805160206134ec833981519152906060016126bb565b600b600061275560e08d0160c08e01612eb0565b6001600160a01b0316815260208101919091526040016000205460ff16156127a65760408051848152600060208201526006918101919091526000805160206134ec833981519152906060016126bb565b60006101408b01356127c26101208d01356101008e01356131e7565b6127cc91906131e7565b90506000826001600160a01b03166323b872dd60e01b8d60a00160208101906127f59190612eb0565b6040516001600160a01b0390911660248201526044810185905260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516128509190613423565b6000604051808303816000865af19150503d806000811461288d576040519150601f19603f3d011682016040523d82523d6000602084013e612892565b606091505b50509050806128e457604080518681526000602082015260048183015290516000805160206134ec8339815191529181900360600190a150505060009182525060066020526040902060029055612a0b565b81600d60008e60a00160208101906128fc9190612eb0565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461294e91906131e7565b9250508190555081600e60008e60a001602081019061296d9190612eb0565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008282546129bf91906131e7565b909155505060008581526006602090815260408083206001908190558151898152928301528101919091526000805160206134ec8339815191529060600160405180910390a150505050505b50505050505050565b6002546001600160a01b03163314612a3e5760405162461bcd60e51b815260040161075f9061319c565b6001600160a01b038116612aa35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161075f565b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b612b098282611c39565b61086e5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b612b748282611c39565b1561086e5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60005460ff16612c1a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161075f565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000878152600360205260409020546001600160a01b031680612cd75760405162461bcd60e51b815260206004820152602560248201527f4e6f207265676973746572656420766572696669657220666f7220626c6f636b60448201526431b430b4b760d91b606482015260840161075f565b6000888152600460205260409020546001600160a01b03888116911614612d4e5760405162461bcd60e51b815260206004820152602560248201527f44617461206e6f7420656d697474656420627920617070726f76656420636f6e6044820152641d1c9858dd60da1b606482015260840161075f565b60008888888888604051602001612d6995949392919061343f565b60408051601f198184030181529082905263260e748160e11b825291506001600160a01b03831690634c1ce90290612dad908c908b9086908a908a90600401613479565b60006040518083038186803b158015612dc557600080fd5b505afa158015612dd9573d6000803e3d6000fd5b50505050505050505050505050565b60005460ff1615612e2e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161075f565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612c473390565b600060208284031215612e7557600080fd5b81356001600160e01b031981168114612e8d57600080fd5b9392505050565b80356001600160a01b0381168114612eab57600080fd5b919050565b600060208284031215612ec257600080fd5b612e8d82612e94565b600060208284031215612edd57600080fd5b5035919050565b60008060408385031215612ef757600080fd5b82359150612f0760208401612e94565b90509250929050565b60008060408385031215612f2357600080fd5b612f2c83612e94565b9150612f0760208401612e94565b60008060408385031215612f4d57600080fd5b612f5683612e94565b946020939093013593505050565b60006101a08284031215612f7757600080fd5b50919050565b60008083601f840112612f8f57600080fd5b50813567ffffffffffffffff811115612fa757600080fd5b602083019150836020828501011115612fbf57600080fd5b9250929050565b60008060008060006101e08688031215612fdf57600080fd5b612fe98787612f64565b94506101a086013567ffffffffffffffff8082111561300757600080fd5b61301389838a01612f7d565b90965094506101c088013591508082111561302d57600080fd5b5061303a88828901612f7d565b969995985093965092949392505050565b60008060006060848603121561306057600080fd5b61306984612e94565b92506020840135915061307e60408501612e94565b90509250925092565b60006101a0828403121561309a57600080fd5b612e8d8383612f64565b80151581146130b257600080fd5b50565b600080604083850312156130c857600080fd5b6130d183612e94565b915060208301356130e1816130a4565b809150509250929050565b6000806000806000806000610200888a03121561310857600080fd5b6131128989612f64565b96506101a088013567ffffffffffffffff8082111561313057600080fd5b61313c8b838c01612f7d565b90985096506101c08a013591508082111561315657600080fd5b6131628b838c01612f7d565b90965094506101e08a013591508082111561317c57600080fd5b506131898a828b01612f7d565b989b979a50959850939692959293505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156131fa576131fa6131d1565b500190565b60006020828403121561321157600080fd5b8151612e8d816130a4565b60008282101561322e5761322e6131d1565b500390565b81358152602080830135908201526101a0810161325260408401612e94565b6001600160a01b031660408301526060838101359083015261327660808401612e94565b6001600160a01b0316608083015261329060a08401612e94565b6001600160a01b031660a08301526132aa60c08401612e94565b6001600160a01b031660c08301526132c460e08401612e94565b6001600160a01b031660e0830152610100838101359083015261012080840135908301526101408084013590830152610160808401359083015261018092830135929091019190915290565b6020808252603b908201527f3230414354533a2050726570617265204f6e205461726765743a20426964646960408201527f6e6720706572696f64207374696c6c20696e2070726f67726573730000000000606082015260800190565b60208082526032908201527f3230414354533a2050726570617265204f6e20536f757263653a204e6f74206660408201527137b9103a3434b990313637b1b5b1b430b4b760711b606082015260800190565b6000806000606084860312156133d457600080fd5b8335925060208401356133e6816130a4565b929592945050506040919091013590565b60005b838110156134125781810151838201526020016133fa565b83811115610c0e5750506000910152565b600082516134358184602087016133f7565b9190910192915050565b8581526bffffffffffffffffffffffff198560601b1660208201528360348201528183605483013760009101605401908152949350505050565b85815284602082015260806040820152600084518060808401526134a48160a08501602089016133f7565b601f1980601f8301168401915060a08483030160608501528460a0830152848660c0840137600060c0868401015260c081601f87011683010192505050969550505050505056fe8b1ea4b1b3dc4801e398c16d0c250791e1c05ee32fa68f35ae3de4f5a9db7542a264697066735822122051bf03a22bd3f01773c587dc086de3db15714aadfe89be3802815c1e1a87638d64736f6c63430008090033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_MAPPING_ROLE = "MAPPING_ROLE";

    public static final String FUNC_PAUSER_ROLE = "PAUSER_ROLE";

    public static final String FUNC_ADDREMOTECROSSCHAINCONTROL = "addRemoteCrosschainControl";

    public static final String FUNC_ADDVERIFIER = "addVerifier";

    public static final String FUNC_ALLOCATED = "allocated";

    public static final String FUNC_BANNED = "banned";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_DEPOSITS = "deposits";

    public static final String FUNC_ERC20ADDRESSMAPPING = "erc20AddressMapping";

    public static final String FUNC_ERC20SUPPORTED = "erc20Supported";

    public static final String FUNC_FINALIZEONSOURCE = "finalizeOnSource";

    public static final String FUNC_FINALIZEONTARGET = "finalizeOnTarget";

    public static final String FUNC_FINALIZEWITHDRAWAL = "finalizeWithdrawal";

    public static final String FUNC_FROZEN = "frozen";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_INFRASTRUCTUREACCOUNT = "infrastructureAccount";

    public static final String FUNC_MYBLOCKCHAINID = "myBlockchainId";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_PREPAREONSOURCE = "prepareOnSource";

    public static final String FUNC_PREPAREONTARGET = "prepareOnTarget";

    public static final String FUNC_REMOTEERC20BRIDGES = "remoteErc20Bridges";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REQUESTWITHDRAWAL = "requestWithdrawal";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETBANNED = "setBanned";

    public static final String FUNC_SETBRIDGEMAPPING = "setBridgeMapping";

    public static final String FUNC_SETERC20MAPPING = "setErc20Mapping";

    public static final String FUNC_SETFROZEN = "setFrozen";

    public static final String FUNC_SETINFRASTRUCTUREACCOUNT = "setInfrastructureAccount";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_TXCOMPLETE = "txComplete";

    public static final String FUNC_TXSTATE = "txState";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_WITHDRAWWAITPERIOD = "withdrawWaitPeriod";

    public static final String FUNC_WITHDRAWALS = "withdrawals";

    public static final String FUNC_WITHDRAWALSTIME = "withdrawalsTime";

    public static final Event ERC20ADDRESSMAPPINGCHANGED_EVENT = new Event("ERC20AddressMappingChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event FINALIZEONSOURCE_EVENT = new Event("FinalizeOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event FINALIZEONTARGET_EVENT = new Event("FinalizeOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PAUSED_EVENT = new Event("Paused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event PREPAREONSOURCE_EVENT = new Event("PrepareOnSource", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event PREPAREONTARGET_EVENT = new Event("PrepareOnTarget", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TwentyActs(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ERC20AddressMappingChangedEventResponse> getERC20AddressMappingChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ERC20ADDRESSMAPPINGCHANGED_EVENT, transactionReceipt);
        ArrayList<ERC20AddressMappingChangedEventResponse> responses = new ArrayList<ERC20AddressMappingChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ERC20AddressMappingChangedEventResponse typedResponse = new ERC20AddressMappingChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._thisBcTokenContract = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._otherBcId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._othercTokenContract = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ERC20AddressMappingChangedEventResponse> eRC20AddressMappingChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ERC20AddressMappingChangedEventResponse>() {
            @Override
            public ERC20AddressMappingChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ERC20ADDRESSMAPPINGCHANGED_EVENT, log);
                ERC20AddressMappingChangedEventResponse typedResponse = new ERC20AddressMappingChangedEventResponse();
                typedResponse.log = log;
                typedResponse._thisBcTokenContract = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._otherBcId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._othercTokenContract = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ERC20AddressMappingChangedEventResponse> eRC20AddressMappingChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ERC20ADDRESSMAPPINGCHANGED_EVENT));
        return eRC20AddressMappingChangedEventFlowable(filter);
    }

    public List<FinalizeOnSourceEventResponse> getFinalizeOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, transactionReceipt);
        ArrayList<FinalizeOnSourceEventResponse> responses = new ArrayList<FinalizeOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnSourceEventResponse>() {
            @Override
            public FinalizeOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONSOURCE_EVENT, log);
                FinalizeOnSourceEventResponse typedResponse = new FinalizeOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnSourceEventResponse> finalizeOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONSOURCE_EVENT));
        return finalizeOnSourceEventFlowable(filter);
    }

    public List<FinalizeOnTargetEventResponse> getFinalizeOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, transactionReceipt);
        ArrayList<FinalizeOnTargetEventResponse> responses = new ArrayList<FinalizeOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FinalizeOnTargetEventResponse>() {
            @Override
            public FinalizeOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FINALIZEONTARGET_EVENT, log);
                FinalizeOnTargetEventResponse typedResponse = new FinalizeOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FinalizeOnTargetEventResponse> finalizeOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FINALIZEONTARGET_EVENT));
        return finalizeOnTargetEventFlowable(filter);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<PausedEventResponse> getPausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSED_EVENT, transactionReceipt);
        ArrayList<PausedEventResponse> responses = new ArrayList<PausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PausedEventResponse typedResponse = new PausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PausedEventResponse>() {
            @Override
            public PausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSED_EVENT, log);
                PausedEventResponse typedResponse = new PausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public List<PrepareOnSourceEventResponse> getPrepareOnSourceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, transactionReceipt);
        ArrayList<PrepareOnSourceEventResponse> responses = new ArrayList<PrepareOnSourceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnSourceEventResponse>() {
            @Override
            public PrepareOnSourceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONSOURCE_EVENT, log);
                PrepareOnSourceEventResponse typedResponse = new PrepareOnSourceEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._success = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._failureReason = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnSourceEventResponse> prepareOnSourceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONSOURCE_EVENT));
        return prepareOnSourceEventFlowable(filter);
    }

    public List<PrepareOnTargetEventResponse> getPrepareOnTargetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PREPAREONTARGET_EVENT, transactionReceipt);
        ArrayList<PrepareOnTargetEventResponse> responses = new ArrayList<PrepareOnTargetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PrepareOnTargetEventResponse>() {
            @Override
            public PrepareOnTargetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PREPAREONTARGET_EVENT, log);
                PrepareOnTargetEventResponse typedResponse = new PrepareOnTargetEventResponse();
                typedResponse.log = log;
                typedResponse._txInfoDigest = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PrepareOnTargetEventResponse> prepareOnTargetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PREPAREONTARGET_EVENT));
        return prepareOnTargetEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<UnpausedEventResponse> getUnpausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSED_EVENT, transactionReceipt);
        ArrayList<UnpausedEventResponse> responses = new ArrayList<UnpausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UnpausedEventResponse typedResponse = new UnpausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnpausedEventResponse>() {
            @Override
            public UnpausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSED_EVENT, log);
                UnpausedEventResponse typedResponse = new UnpausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_MAPPING_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MAPPING_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_PAUSER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addRemoteCrosschainControl(BigInteger _blockchainId, String _cbc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDREMOTECROSSCHAINCONTROL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _cbc)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_addVerifier(BigInteger _blockchainId, String _verifier) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDVERIFIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_blockchainId), 
                new org.web3j.abi.datatypes.Address(160, _verifier)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_allocated(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOCATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_banned(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deposit(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_deposit(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_deposits(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> erc20AddressMapping(String param0, BigInteger param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ERC20ADDRESSMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_erc20AddressMapping(String param0, BigInteger param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ERC20ADDRESSMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> erc20Supported(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ERC20SUPPORTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_erc20Supported(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ERC20SUPPORTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeOnTarget(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEONTARGET, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeWithdrawal(String _thisBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_finalizeWithdrawal(String _thisBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINALIZEWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_frozen(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public String getABI_getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_infrastructureAccount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_myBlockchainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MYBLOCKCHAINID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_pause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnSource(TxInfo _txInfo, byte[] _eventData, byte[] _signatureOrProof, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONSOURCE, 
                Arrays.<Type>asList(_txInfo, 
                new org.web3j.abi.datatypes.DynamicBytes(_eventData), 
                new org.web3j.abi.datatypes.DynamicBytes(_signatureOrProof), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_prepareOnTarget(TxInfo _txInfo) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PREPAREONTARGET, 
                Arrays.<Type>asList(_txInfo), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<String> remoteErc20Bridges(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_REMOTEERC20BRIDGES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public String getABI_remoteErc20Bridges(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOTEERC20BRIDGES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> requestWithdrawal(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_requestWithdrawal(String _thisBcErc20, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUESTWITHDRAWAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setBanned(String _user, Boolean _banned) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_banned)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setBridgeMapping(BigInteger _otherBcId, String _otherErc20Bridge) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBRIDGEMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherErc20Bridge)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setBridgeMapping(BigInteger _otherBcId, String _otherErc20Bridge) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBRIDGEMAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherErc20Bridge)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setErc20Mapping(String _thisBcErc20, BigInteger _otherBcId, String _otherBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETERC20MAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setErc20Mapping(String _thisBcErc20, BigInteger _otherBcId, String _otherBcErc20) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETERC20MAPPING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _thisBcErc20), 
                new org.web3j.abi.datatypes.generated.Uint256(_otherBcId), 
                new org.web3j.abi.datatypes.Address(160, _otherBcErc20)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setFrozen(String _user, Boolean _frozen) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROZEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Bool(_frozen)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_setInfrastructureAccount(String _account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETINFRASTRUCTUREACCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _account)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<Boolean> txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public String getABI_txComplete(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXCOMPLETE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_txState(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TXSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public String getABI_unpause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWWAITPERIOD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawWaitPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWWAITPERIOD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawals(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    public RemoteFunctionCall<BigInteger> withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public String getABI_withdrawalsTime(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWALSTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1)), 
                Collections.<TypeReference<?>>emptyList());
        return org.web3j.abi.FunctionEncoder.encode(function);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TwentyActs(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TwentyActs load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TwentyActs(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, BigInteger _myBlockchainId, BigInteger _withdrawWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TwentyActs> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger _myBlockchainId, BigInteger _withdrawWaitPeriod, String _infrastructureAccount) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_myBlockchainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_withdrawWaitPeriod), 
                new org.web3j.abi.datatypes.Address(160, _infrastructureAccount)));
        return deployRemoteCall(TwentyActs.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class TxInfo extends StaticStruct {
        public BigInteger crosschainTxId;

        public BigInteger sourceBcId;

        public String sourceErc20Address;

        public BigInteger targetBcId;

        public String targetErc20Address;

        public String sender;

        public String recipient;

        public String liquidityProvider;

        public BigInteger amount;

        public BigInteger lpFee;

        public BigInteger inFee;

        public BigInteger biddingPeriodEnd;

        public BigInteger timeout;

        public TxInfo(BigInteger crosschainTxId, BigInteger sourceBcId, String sourceErc20Address, BigInteger targetBcId, String targetErc20Address, String sender, String recipient, String liquidityProvider, BigInteger amount, BigInteger lpFee, BigInteger inFee, BigInteger biddingPeriodEnd, BigInteger timeout) {
            super(new org.web3j.abi.datatypes.generated.Uint256(crosschainTxId),new org.web3j.abi.datatypes.generated.Uint256(sourceBcId),new org.web3j.abi.datatypes.Address(sourceErc20Address),new org.web3j.abi.datatypes.generated.Uint256(targetBcId),new org.web3j.abi.datatypes.Address(targetErc20Address),new org.web3j.abi.datatypes.Address(sender),new org.web3j.abi.datatypes.Address(recipient),new org.web3j.abi.datatypes.Address(liquidityProvider),new org.web3j.abi.datatypes.generated.Uint256(amount),new org.web3j.abi.datatypes.generated.Uint256(lpFee),new org.web3j.abi.datatypes.generated.Uint256(inFee),new org.web3j.abi.datatypes.generated.Uint256(biddingPeriodEnd),new org.web3j.abi.datatypes.generated.Uint256(timeout));
            this.crosschainTxId = crosschainTxId;
            this.sourceBcId = sourceBcId;
            this.sourceErc20Address = sourceErc20Address;
            this.targetBcId = targetBcId;
            this.targetErc20Address = targetErc20Address;
            this.sender = sender;
            this.recipient = recipient;
            this.liquidityProvider = liquidityProvider;
            this.amount = amount;
            this.lpFee = lpFee;
            this.inFee = inFee;
            this.biddingPeriodEnd = biddingPeriodEnd;
            this.timeout = timeout;
        }

        public TxInfo(Uint256 crosschainTxId, Uint256 sourceBcId, Address sourceErc20Address, Uint256 targetBcId, Address targetErc20Address, Address sender, Address recipient, Address liquidityProvider, Uint256 amount, Uint256 lpFee, Uint256 inFee, Uint256 biddingPeriodEnd, Uint256 timeout) {
            super(crosschainTxId,sourceBcId,sourceErc20Address,targetBcId,targetErc20Address,sender,recipient,liquidityProvider,amount,lpFee,inFee,biddingPeriodEnd,timeout);
            this.crosschainTxId = crosschainTxId.getValue();
            this.sourceBcId = sourceBcId.getValue();
            this.sourceErc20Address = sourceErc20Address.getValue();
            this.targetBcId = targetBcId.getValue();
            this.targetErc20Address = targetErc20Address.getValue();
            this.sender = sender.getValue();
            this.recipient = recipient.getValue();
            this.liquidityProvider = liquidityProvider.getValue();
            this.amount = amount.getValue();
            this.lpFee = lpFee.getValue();
            this.inFee = inFee.getValue();
            this.biddingPeriodEnd = biddingPeriodEnd.getValue();
            this.timeout = timeout.getValue();
        }
    }

    public static class ERC20AddressMappingChangedEventResponse extends BaseEventResponse {
        public String _thisBcTokenContract;

        public BigInteger _otherBcId;

        public String _othercTokenContract;
    }

    public static class FinalizeOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class FinalizeOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class PausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class PrepareOnSourceEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;

        public Boolean _success;

        public BigInteger _failureReason;
    }

    public static class PrepareOnTargetEventResponse extends BaseEventResponse {
        public byte[] _txInfoDigest;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class UnpausedEventResponse extends BaseEventResponse {
        public String account;
    }
}
