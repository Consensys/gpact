plugins {
    id 'java'
}

sourceCompatibility = 1.9

repositories {
    mavenCentral()
}

dependencies {

    testImplementation project (':common')
    testImplementation project (':registrar')

    implementation files('../../../../web3j-rlp/abi/build/libs/abi-4.8.5-SNAPSHOT.jar')
    implementation files('../../../../web3j-rlp/core/build/libs/core-4.8.5-SNAPSHOT.jar')
    implementation files('../../../../web3j-rlp/crypto/build/libs/crypto-4.8.5-SNAPSHOT.jar')
    implementation files('../../../../web3j-rlp/rlp/build/libs/rlp-4.8.5-SNAPSHOT.jar')
    implementation files('../../../../web3j-rlp/utils/build/libs/utils-4.8.5-SNAPSHOT.jar')

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.11.6'

    implementation "io.reactivex.rxjava2:rxjava:2.2.2"


    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'

    testImplementation project (path: ':common', configuration: 'testArtifacts')
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}


// Generate Solidity wrapper code before build.
task generateSources {
    def script = "functioncall/gpact/gen.sh".execute()
//    script.in.eachLine {line -> println line}
//    script.err.eachLine {line -> println "ERROR: " + line}
    script.waitForProcessOutput(System.out, System.err)
    if (script.exitValue() != 0) {
        throw new GradleException("Solidity compile error")
    }
}
project.afterEvaluate {
    build.dependsOn generateSources
}


// Generate a test jar so other modules can use the test code, in particular AbstractRegistrarTest.
configurations {
    testArtifacts.extendsFrom testRuntime
}
task testJar(type: Jar) {
    classifier "test"
    from sourceSets.test.output
}
artifacts {
    testArtifacts testJar
}

test {
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}